{"ast":null,"code":"var _jsxFileName = \"/home/vlad/10tka/10tka-frontend/src/components/DragAndDrop/DAndD.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons/faSave\";\nimport ButtonTimetable from \"@components/ButtonTimetable\";\nimport ButtonWithInput from \"@components/ButtonWithInput\";\nimport AdminPanel from \"@components/AdminPanel\";\nimport { buttonsContent, Week } from \"@config/config\";\nimport DroppableElem from \"@components/DragAndDrop/DroppableElem\";\nimport DraggableArea from \"@components/DragAndDrop/DraggableArea\";\nimport DroppableArea from \"@components/DragAndDrop/DroppableArea\";\nimport { findNextDay, copy, reorder, checkFill, saveTimetable, Labels } from \"@components/DragAndDrop/config\";\nimport \"./DAndD.scss\";\nimport { makeGet } from \"@utils/network\";\nimport { Urls } from \"@config/urls\";\nimport { getWeekType } from \"../../pages/Home/Home\";\nimport StatusLabel from \"@components/StatusLabel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst prepareLessons = lessons => {\n  return lessons.map(lesson => ({\n    id: lesson.lesson_id,\n    ... /*#__PURE__*/_jsxDEV(DroppableElem, {\n      isEmpty: lesson.lesson_type === \"free\",\n      sourceIdx: Labels[lesson.lesson_type],\n      header: lesson.title,\n      footer: lesson.auditorium\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 34\n    }, this)\n  }));\n};\n\nconst prepareWeek = weekDays => {\n  const newList = {};\n  weekDays.forEach((day, index) => {\n    if (day.lessons) {\n      newList[index] = prepareLessons(day.lessons);\n    }\n  });\n  return newList;\n};\n\nconst DragAndDrop = () => {\n  _s();\n\n  const [err, showLabel] = useState({\n    content: \"\",\n    success: false\n  });\n  const [deleted, changeDeleted] = useState({\n    lessons: []\n  });\n  const [Lists, changeList] = useState({\n    0: []\n  });\n  const [dayIdx, changeDayIdx] = useState(1);\n  const [areasValue, setAreasValues] = useState({});\n  const [inputsValue, setValues] = useState({});\n  const [panelData, setPanelData] = useState({\n    group: 0,\n    semester: 0,\n    week: 0,\n    weekType: \"\"\n  });\n  useEffect(() => {\n    if (panelData.semester !== 0) {\n      showLabel({\n        content: \"\",\n        success: false\n      });\n      makeGet(Urls.timetable.get(`IU10-${panelData.semester}${panelData.group}`, getWeekType(panelData.weekType))).then(response => {\n        const savedWeek = prepareWeek(response.data.week.days);\n        changeList(savedWeek);\n        changeDayIdx(findNextDay(savedWeek));\n      }).catch(error => {\n        showLabel({\n          content: \"Указанная группа не найдена\",\n          success: false\n        });\n        changeList({\n          0: []\n        });\n        return;\n      });\n    }\n  }, [panelData]);\n  const changeArea = React.useCallback((id, value) => {\n    const oldAreas = areasValue;\n    oldAreas[id] = value;\n    setAreasValues(oldAreas);\n  }, [areasValue]);\n  const changeInput = React.useCallback((id, value) => {\n    const oldInputs = inputsValue;\n    oldInputs[id] = value;\n    setValues(oldInputs);\n  }, [inputsValue]);\n  const droppableColumn = React.useMemo(() => buttonsContent.map((btn, idx) => /*#__PURE__*/_jsxDEV(ButtonWithInput, {\n    btn: btn,\n    onAreaChange: changeArea,\n    onInputChange: changeInput,\n    inputs: {\n      maxInputLength: 5,\n      maxAreaLength: 50\n    }\n  }, idx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this)), [changeInput, changeArea]);\n  const onDragEnd = React.useCallback(result => {\n    const {\n      source,\n      destination\n    } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    const newList = { ...Lists\n    };\n\n    switch (source.droppableId) {\n      case destination.droppableId:\n        if (destination.droppableId === \"items\") {\n          return;\n        }\n\n        newList[destination.droppableId] = reorder(Lists[source.droppableId], source.index, destination.index);\n        break;\n\n      case \"items\":\n        if (Lists[destination.droppableId].length === Week.length) {\n          return;\n        }\n\n        const title = areasValue[buttonsContent[source.index].id];\n        const auditorium = inputsValue[buttonsContent[source.index].id];\n        const isEmpty = buttonsContent[source.index].title === \"СР\";\n\n        if (!isEmpty && !checkFill(title, auditorium)) {\n          return;\n        }\n\n        const draggable = /*#__PURE__*/_jsxDEV(DroppableElem, {\n          isEmpty: isEmpty,\n          sourceIdx: source.index,\n          header: isEmpty ? \"Самостоятельная работа\" : title,\n          footer: auditorium\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 35\n        }, this);\n\n        newList[destination.droppableId] = copy(draggable, newList[destination.droppableId], destination.index);\n        break;\n    }\n\n    changeList(newList);\n    console.log(Lists);\n  }, [Lists, areasValue, inputsValue]);\n  const AddList = React.useCallback(() => {\n    const idx = findNextDay(Lists);\n\n    if (idx === -1) {\n      return;\n    }\n\n    const newList = { ...Lists\n    };\n    newList[idx] = [];\n    changeList(newList);\n    changeDayIdx(findNextDay(newList));\n  }, [Lists]);\n  const removeItem = React.useCallback((list, index) => {\n    const newList = { ...Lists\n    };\n    const id = newList[list][index].id;\n    const deletedLessons = [...deleted.lessons];\n    deletedLessons.push(id);\n    changeDeleted({\n      lessons: deletedLessons\n    });\n    newList[list].splice(index, 1);\n    changeList(newList);\n  }, [Lists, deleted.lessons]);\n  const removeList = React.useCallback(list => {\n    const newList = { ...Lists\n    };\n    delete newList[list];\n    changeList(newList);\n    const idx = findNextDay(newList);\n    changeDayIdx(idx);\n  }, [Lists]);\n  const getPanelDataHandler = React.useCallback((group, semester, week, weekType) => {\n    setPanelData({\n      group: group,\n      semester: semester,\n      week: week,\n      weekType: weekType\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DAndD text-center\",\n    children: [/*#__PURE__*/_jsxDEV(StatusLabel, {\n      info: err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-none d-sm-block col-sm-4 col-md-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-7\",\n        children: /*#__PURE__*/_jsxDEV(AdminPanel, {\n          dayIdx: dayIdx,\n          changeDay: AddList,\n          getPanelData: getPanelDataHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-row\",\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-5\",\n          children: /*#__PURE__*/_jsxDEV(DroppableArea, {\n            Lists: Lists,\n            removeList: removeList,\n            removeItem: removeItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-7 d-flex\",\n          children: /*#__PURE__*/_jsxDEV(DraggableArea, {\n            droppableColumn: droppableColumn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ButtonTimetable, {\n        onChange: () => {\n          saveTimetable(Lists, deleted, panelData, showLabel); //history.replace(Urls.timetable.byId)\n        },\n        btn: {\n          id: uuid(),\n          color: \"#36a51c\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-row align-items-center justify-content-around\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSave,\n            size: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DragAndDrop, \"OBmZQZjDFv4dWJAiEqRI/fQO1J0=\");\n\n_c = DragAndDrop;\nexport default DragAndDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragAndDrop\");","map":{"version":3,"sources":["/home/vlad/10tka/10tka-frontend/src/components/DragAndDrop/DAndD.tsx"],"names":["React","useEffect","useState","v4","uuid","DragDropContext","FontAwesomeIcon","faSave","ButtonTimetable","ButtonWithInput","AdminPanel","buttonsContent","Week","DroppableElem","DraggableArea","DroppableArea","findNextDay","copy","reorder","checkFill","saveTimetable","Labels","makeGet","Urls","getWeekType","StatusLabel","prepareLessons","lessons","map","lesson","id","lesson_id","lesson_type","title","auditorium","prepareWeek","weekDays","newList","forEach","day","index","DragAndDrop","err","showLabel","content","success","deleted","changeDeleted","Lists","changeList","dayIdx","changeDayIdx","areasValue","setAreasValues","inputsValue","setValues","panelData","setPanelData","group","semester","week","weekType","timetable","get","then","response","savedWeek","data","days","catch","error","changeArea","useCallback","value","oldAreas","changeInput","oldInputs","droppableColumn","useMemo","btn","idx","maxInputLength","maxAreaLength","onDragEnd","result","source","destination","droppableId","length","isEmpty","draggable","console","log","AddList","removeItem","list","deletedLessons","push","splice","removeList","getPanelDataHandler","color"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {v4 as uuid} from \"uuid\";\nimport {DragDropContext, DropResult} from \"react-beautiful-dnd\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faSave} from \"@fortawesome/free-solid-svg-icons/faSave\";\n\nimport ButtonTimetable from \"@components/ButtonTimetable\";\nimport ButtonWithInput from \"@components/ButtonWithInput\";\nimport AdminPanel from \"@components/AdminPanel\";\n\nimport {buttonsContent, Week} from \"@config/config\";\nimport DroppableElem from \"@components/DragAndDrop/DroppableElem\";\nimport DraggableArea from \"@components/DragAndDrop/DraggableArea\";\nimport DroppableArea from \"@components/DragAndDrop/DroppableArea\";\nimport {findNextDay, copy, reorder, checkFill, saveTimetable, Labels} from \"@components/DragAndDrop/config\";\n\nimport \"./DAndD.scss\"\nimport {makeGet} from \"@utils/network\";\nimport {Urls} from \"@config/urls\";\nimport {getWeekType} from \"../../pages/Home/Home\";\nimport StatusLabel from \"@components/StatusLabel\";\n\ntype Lesson = {\n    lesson_id: string;\n    title: string;\n    lesson_type: string;\n    auditorium: string;\n}\n\nconst prepareLessons = (lessons: Array<Lesson>) => {\n    return lessons.map((lesson) => ({\n        id: lesson.lesson_id, ...<DroppableElem isEmpty={lesson.lesson_type === \"free\"}\n                                                sourceIdx={Labels[lesson.lesson_type]}\n                                                header={lesson.title}\n                                                footer={lesson.auditorium}/>\n    }))\n}\n\n\nconst prepareWeek = (weekDays: Array<{ day_id: string, day_order: number, lessons: Array<Lesson> }>) => {\n    const newList = {};\n\n    weekDays.forEach((day, index) => {\n        if (day.lessons) {\n            newList[index] = prepareLessons(day.lessons)\n        }\n    })\n    return newList\n}\n\n\nconst DragAndDrop = () => {\n    const [err, showLabel] = useState({content: \"\", success: false});\n    const [deleted, changeDeleted] = useState<{ lessons: Array<string> }>({lessons: []});\n    const [Lists, changeList] = useState<object>({0: []});\n    const [dayIdx, changeDayIdx] = useState<number>(1);\n    const [areasValue, setAreasValues] = useState({});\n    const [inputsValue, setValues] = useState({});\n    const [panelData, setPanelData] = useState({group: 0, semester: 0, week: 0, weekType: \"\"});\n\n    useEffect(() => {\n        if (panelData.semester !== 0) {\n            showLabel({content:\"\", success: false})\n            makeGet(Urls.timetable.get(`IU10-${panelData.semester}${panelData.group}`, getWeekType(panelData.weekType))).then((response) => {\n                const savedWeek = prepareWeek(response.data.week.days);\n                changeList(savedWeek);\n                changeDayIdx(findNextDay(savedWeek));\n            }).catch((error) => {\n                showLabel({content:\"Указанная группа не найдена\", success: false})\n                changeList({0: []});\n                return;\n            });\n        }\n    }, [panelData])\n\n    const changeArea = React.useCallback((id: string, value: string) => {\n        const oldAreas = areasValue;\n        oldAreas[id] = value;\n        setAreasValues(oldAreas);\n    }, [areasValue]);\n\n    const changeInput = React.useCallback((id: string, value: string) => {\n        const oldInputs = inputsValue;\n        oldInputs[id] = value;\n        setValues(oldInputs);\n    }, [inputsValue]);\n\n    const droppableColumn = React.useMemo(() => (buttonsContent.map((btn, idx) => (\n        <ButtonWithInput key={idx} btn={btn} onAreaChange={changeArea} onInputChange={changeInput}\n                         inputs={{maxInputLength: 5, maxAreaLength: 50}}/>\n    ))), [changeInput, changeArea])\n\n    const onDragEnd = React.useCallback((result: DropResult) => {\n        const {source, destination} = result;\n\n        if (!destination) {\n            return;\n        }\n        const newList = {...Lists};\n\n        switch (source.droppableId) {\n            case destination.droppableId:\n                if (destination.droppableId === \"items\") {\n                    return;\n                }\n                newList[destination.droppableId] = reorder(\n                    Lists[source.droppableId],\n                    source.index,\n                    destination.index\n                )\n                break;\n            case \"items\":\n                if (Lists[destination.droppableId].length === Week.length) {\n                    return;\n                }\n                const title = areasValue[buttonsContent[source.index].id];\n                const auditorium = inputsValue[buttonsContent[source.index].id];\n                const isEmpty = buttonsContent[source.index].title === \"СР\";\n\n                if (!isEmpty && !checkFill(title, auditorium)) {\n                    return;\n                }\n\n                const draggable = <DroppableElem isEmpty={isEmpty} sourceIdx={source.index}\n                                                 header={isEmpty ? \"Самостоятельная работа\" : title}\n                                                 footer={auditorium}/>\n\n                newList[destination.droppableId] = copy(\n                    draggable,\n                    newList[destination.droppableId],\n                    destination.index\n                )\n                break;\n        }\n        changeList(newList);\n        console.log(Lists)\n    }, [Lists, areasValue, inputsValue]);\n\n    const AddList = React.useCallback(() => {\n        const idx = findNextDay(Lists)\n        if (idx === -1) {\n            return;\n        }\n        const newList = {...Lists};\n        newList[idx] = [];\n        changeList(newList);\n        changeDayIdx(findNextDay(newList));\n    }, [Lists]);\n\n    const removeItem = React.useCallback((list: string, index: number) => {\n        const newList = {...Lists};\n        const id: string = newList[list][index].id\n        const deletedLessons: Array<string> = [...deleted.lessons]\n        deletedLessons.push(id)\n        changeDeleted({lessons: deletedLessons});\n        newList[list].splice(index, 1);\n        changeList(newList);\n    }, [Lists, deleted.lessons]);\n\n    const removeList = React.useCallback((list: number) => {\n        const newList = {...Lists};\n        delete newList[list];\n        changeList(newList);\n        const idx = findNextDay(newList);\n        changeDayIdx(idx);\n    }, [Lists]);\n\n    const getPanelDataHandler = React.useCallback((group: number, semester: number, week: number, weekType: string) => {\n        setPanelData({group: group, semester: semester, week: week, weekType: weekType})\n    }, [])\n\n    return (\n        <div className=\"DAndD text-center\">\n            <StatusLabel info={err}/>\n            <div className=\"d-flex flex-row\">\n                <div className=\"d-none d-sm-block col-sm-4 col-md-5\"/>\n                <div className=\"col-md-7\">\n                    <AdminPanel dayIdx={dayIdx} changeDay={AddList} getPanelData={getPanelDataHandler}/>\n                </div>\n            </div>\n            <hr/>\n            <div className=\"d-flex flex-row\">\n                <DragDropContext onDragEnd={onDragEnd}>\n                    <div className=\"col-5\">\n                        <DroppableArea Lists={Lists} removeList={removeList} removeItem={removeItem}/>\n                    </div>\n                    <div className=\"col-7 d-flex\">\n                        <DraggableArea droppableColumn={droppableColumn}/>\n                    </div>\n                </DragDropContext>\n            </div>\n            <hr/>\n            <div>\n                <ButtonTimetable\n                    onChange={() => {\n                        saveTimetable(Lists, deleted, panelData, showLabel)\n                        //history.replace(Urls.timetable.byId)\n                    }}\n                    btn={{id: uuid(), color: \"#36a51c\"}}\n                >\n                    <div className=\"d-flex flex-row align-items-center justify-content-around\">\n                        <FontAwesomeIcon icon={faSave} size={\"sm\"}/>\n                        <div>Save</div>\n                    </div>\n                </ButtonTimetable>\n            </div>\n\n        </div>\n    );\n}\n\nexport default DragAndDrop;\n"]},"metadata":{},"sourceType":"module"}