{"ast":null,"code":"var _jsxFileName = \"/home/vlad/10tka/10tka-frontend/src/components/ButtonWithInput/ButtonWithInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { MDBCollapse } from \"mdbreact\";\nimport ButtonTimetable from \"@components/ButtonTimetable\";\nimport HiddenInput from \"@components/HiddenInput\";\nimport \"./ButtonWithInput.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ButtonWithInput = ({\n  btn,\n  onBtnChange,\n  onInputChange,\n  onAreaChange,\n  inputs\n}) => {\n  _s();\n\n  const [activeInput, setActive] = React.useState(true);\n  const [areaValue, changeValueArea] = React.useState(\"\");\n  const [inputValue, changeValueInput] = React.useState(\"\");\n  const [collapseOpen, changeCollapse] = React.useState(false);\n  const changeAreaValue = React.useCallback(value => {\n    if (inputs && inputs.maxAreaLength < value.length) {\n      return;\n    }\n\n    changeValueArea(value);\n\n    if (onAreaChange) {\n      onAreaChange(btn.id, value);\n    }\n  }, [onAreaChange, btn.id, inputs]);\n  const setActiveElement = React.useCallback(() => {\n    if (btn.disableInputs) {\n      changeCollapse(!collapseOpen);\n    } else {\n      setActive(!activeInput);\n\n      if (onBtnChange) {\n        onBtnChange();\n      }\n    }\n  }, [onBtnChange, activeInput, collapseOpen, btn.disableInputs]);\n  const changeInputValue = React.useCallback(e => {\n    const value = e.target.value;\n\n    if (inputs && inputs.maxInputLength < value.length) {\n      return;\n    }\n\n    changeValueInput(value);\n\n    if (onInputChange) {\n      onInputChange(btn.id, value);\n    }\n  }, [onInputChange, btn.id, inputs]);\n  const buttonFields = React.useCallback(() => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-row align-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-1\",\n      children: /*#__PURE__*/_jsxDEV(HiddenInput, {\n        id: btn.id,\n        value: areaValue,\n        onChange: changeAreaValue,\n        disabled: activeInput,\n        title: \"Дисциплина\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-1\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: btn.id,\n        value: inputValue,\n        className: \"btn-mdb-input\",\n        type: \"text\",\n        placeholder: \"\\u0410\\u0443\\u0434\",\n        style: {\n          display: activeInput ? \"none\" : \"\"\n        },\n        onChange: e => {\n          changeInputValue(e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this), [btn.id, inputValue, changeInputValue, changeAreaValue, areaValue, activeInput]);\n  const buttonCollapse = React.useCallback(() => /*#__PURE__*/_jsxDEV(MDBCollapse, {\n    id: btn.id,\n    isOpen: collapseOpen,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"collapse-text m-1\",\n      children: \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0439\\u0442\\u0435 \\u0434\\u043B\\u044F \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F \\u043F\\u0440\\u043E\\u043F\\u0443\\u0441\\u043A\\u043E\\u0432 \\u043C\\u0435\\u0436\\u0434\\u0443 \\u043F\\u0430\\u0440\\u0430\\u043C\\u0438.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this), [btn.id, collapseOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-row align-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(ButtonTimetable, {\n      disabled: false,\n      onChange: setActiveElement,\n      btn: btn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), !btn.disableInputs ? buttonFields() : buttonCollapse()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ButtonWithInput, \"8dk64iM30vtfwmhTwlBOzctLjao=\");\n\n_c = ButtonWithInput;\nexport default ButtonWithInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonWithInput\");","map":{"version":3,"sources":["/home/vlad/10tka/10tka-frontend/src/components/ButtonWithInput/ButtonWithInput.tsx"],"names":["React","MDBCollapse","ButtonTimetable","HiddenInput","ButtonWithInput","btn","onBtnChange","onInputChange","onAreaChange","inputs","activeInput","setActive","useState","areaValue","changeValueArea","inputValue","changeValueInput","collapseOpen","changeCollapse","changeAreaValue","useCallback","value","maxAreaLength","length","id","setActiveElement","disableInputs","changeInputValue","e","target","maxInputLength","buttonFields","display","buttonCollapse"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {MDBCollapse} from \"mdbreact\";\nimport ButtonTimetable from \"@components/ButtonTimetable\";\nimport HiddenInput from \"@components/HiddenInput\";\n\nimport \"./ButtonWithInput.scss\"\n\ntype Props = {\n    onInputChange?: (id: string, value: string) => void;\n    onAreaChange?: (id: string, value: string) => void;\n    onBtnChange?: () => void,\n    inputs?: { maxInputLength: number, maxAreaLength: number }\n    btn: { id: string, title?: string, color: string, disableInputs?: boolean }\n}\n\nconst ButtonWithInput: React.FC<Props> = ({btn, onBtnChange, onInputChange, onAreaChange, inputs}) => {\n    const [activeInput, setActive] = React.useState(true);\n    const [areaValue, changeValueArea] = React.useState(\"\");\n    const [inputValue, changeValueInput] = React.useState(\"\");\n    const [collapseOpen, changeCollapse] = React.useState(false)\n\n    const changeAreaValue = React.useCallback((value: string) => {\n        if (inputs && inputs.maxAreaLength < value.length) {\n            return;\n        }\n        changeValueArea(value);\n        if (onAreaChange) {\n            onAreaChange(btn.id, value);\n        }\n    }, [onAreaChange, btn.id, inputs])\n\n    const setActiveElement = React.useCallback(() => {\n        if (btn.disableInputs) {\n            changeCollapse(!collapseOpen)\n        } else {\n            setActive(!activeInput);\n            if (onBtnChange) {\n                onBtnChange();\n            }\n        }\n    }, [onBtnChange, activeInput, collapseOpen, btn.disableInputs])\n\n    const changeInputValue = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value;\n        if (inputs && inputs.maxInputLength < value.length) {\n            return;\n        }\n        changeValueInput(value);\n        if (onInputChange) {\n            onInputChange(btn.id, value);\n        }\n    }, [onInputChange, btn.id, inputs]);\n\n\n    const buttonFields = React.useCallback(() => (\n        <div className=\"d-flex flex-row align-content-center\">\n            <div className=\"m-1\">\n                <HiddenInput id={btn.id} value={areaValue}\n                             onChange={changeAreaValue} disabled={activeInput} title={\"Дисциплина\"}/>\n            </div>\n            <div className=\"m-1\">\n                <input id={btn.id} value={inputValue} className=\"btn-mdb-input\" type=\"text\" placeholder=\"Ауд\"\n                       style={{display: activeInput ? \"none\" : \"\"}}\n                       onChange={(e) => {\n                           changeInputValue(e)\n                       }}/>\n            </div>\n        </div>\n    ), [btn.id, inputValue, changeInputValue, changeAreaValue, areaValue, activeInput]);\n\n    const buttonCollapse = React.useCallback(() => (\n        <MDBCollapse id={btn.id} isOpen={collapseOpen}>\n            <span className=\"collapse-text m-1\">\n                Используйте для создания пропусков между парами.\n            </span>\n        </MDBCollapse>\n    ), [btn.id, collapseOpen]);\n\n    return (\n        <div className=\"d-flex flex-row align-content-center\">\n            <ButtonTimetable disabled={false}\n                             onChange={setActiveElement}\n                             btn={btn}/>\n            {!btn.disableInputs ? buttonFields() : buttonCollapse()}\n        </div>\n    )\n}\n\nexport default ButtonWithInput;"]},"metadata":{},"sourceType":"module"}