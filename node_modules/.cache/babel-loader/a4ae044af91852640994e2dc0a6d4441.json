{"ast":null,"code":"var _jsxFileName = \"/home/vlad/10tka/10tka-frontend/src/components/AdminPanel/AdminPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons/faPlus\";\nimport { faCogs } from \"@fortawesome/free-solid-svg-icons/faCogs\";\nimport ButtonTimetable from \"@components/ButtonTimetable\";\nimport InputNumber from \"@components/InputNumber\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Week } from \"@config/config\";\nimport \"./AdminPanel.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminPanel = ({\n  dayIdx,\n  changeDay,\n  getPanelData\n}) => {\n  _s();\n\n  const [panelLabel, setLabel] = React.useState(\"\");\n  const [groupInfo, setInfo] = React.useState({\n    week: 0,\n    group: 0,\n    semester: 0,\n    weekType: \"Чс\"\n  });\n  const changeLabelInfo = React.useCallback((id, value) => {\n    const newInfo = groupInfo;\n\n    switch (id) {\n      case \"input-for-week\":\n        newInfo.week = value;\n        break;\n\n      case \"input-for-group\":\n        newInfo.group = value;\n        break;\n\n      case \"input-for-sem\":\n        newInfo.semester = value;\n        break;\n\n      case \"input-for-week-type\":\n        newInfo.weekType = value;\n        break;\n    }\n    /*if (newInfo.week !== 0 && !isNaN(newInfo.week) && newInfo.weekType !== \"\" && newInfo.semester !== 0\n        && !isNaN(newInfo.semester) && newInfo.group !== 0 && !isNaN(newInfo.group)) {\n        const newLabel = `${newInfo.week}-я Неделя, ${newInfo.weekType}, Группа ИУ10-${newInfo.semester}${newInfo.group}`\n        setLabel(newLabel)\n        getPanelData(newInfo.group, newInfo.semester, newInfo.week, newInfo.weekType)*/\n\n\n    if (newInfo.weekType !== \"\" && newInfo.semester !== 0 && !isNaN(newInfo.semester) && newInfo.group !== 0 && !isNaN(newInfo.group)) {\n      const newLabel = `Группа ИУ10-${newInfo.semester}${newInfo.group}, ${newInfo.weekType}`;\n      setLabel(newLabel);\n      getPanelData(newInfo.group, newInfo.semester, newInfo.week, newInfo.weekType);\n    } else {\n      setLabel(\"\");\n    }\n\n    setInfo(newInfo);\n  }, [groupInfo, getPanelData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel__header\",\n        children: [\"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0430 \\u043F\\u0430\\u0440\\u0430\\u043C\\u0435\\u0442\\u0440\\u043E\\u0432 \\u0443\\u0447\\u0435\\u0431\\u043D\\u043E\\u0439 \\u0433\\u0440\\u0443\\u043F\\u043F\\u044B\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCogs,\n          size: \"lg\",\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel__body\",\n        children: [dayIdx !== -1 ? /*#__PURE__*/_jsxDEV(ButtonTimetable, {\n          onChange: changeDay,\n          disabled: false,\n          btn: {\n            id: uuid(),\n            color: \"#4fbfb4\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-row flex-nowrap justify-content-around\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus,\n              size: \"lg\",\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"DAndD-container__header__text_white\",\n              children: Week[dayIdx].day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-1\",\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            disabled: true,\n            placeholder: \"\\u041D\\u0435\\u0434\\u0435\\u043B\\u044F\",\n            id: \"input-for-week\",\n            min: 1,\n            max: 17,\n            onChange: changeLabelInfo,\n            defaultValue: NaN\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n          placeholder: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430\",\n          id: \"input-for-group\",\n          min: 1,\n          max: 5,\n          onChange: changeLabelInfo,\n          defaultValue: NaN\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n          placeholder: \"\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\",\n          id: \"input-for-sem\",\n          min: 1,\n          max: 12,\n          onChange: changeLabelInfo,\n          defaultValue: NaN\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mr-1\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"input-for-week-type\",\n            defaultValue: \"1\",\n            className: \"panel__select\",\n            onChange: e => {\n              changeLabelInfo(\"input-for-week-type\", e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\\u0427\\u0441\",\n              children: \"\\u0427\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\\u0417\\u043D\",\n              children: \"\\u0417\\u043D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel__footer\",\n        children: panelLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminPanel, \"+2M+WmGoUdi3l19bF6kVG2Yx9ak=\");\n\n_c = AdminPanel;\nexport default AdminPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"sources":["/home/vlad/10tka/10tka-frontend/src/components/AdminPanel/AdminPanel.tsx"],"names":["React","v4","uuid","faPlus","faCogs","ButtonTimetable","InputNumber","FontAwesomeIcon","Week","AdminPanel","dayIdx","changeDay","getPanelData","panelLabel","setLabel","useState","groupInfo","setInfo","week","group","semester","weekType","changeLabelInfo","useCallback","id","value","newInfo","isNaN","newLabel","color","day","NaN","e","target"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {v4 as uuid} from \"uuid\";\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons/faPlus\";\nimport {faCogs} from \"@fortawesome/free-solid-svg-icons/faCogs\";\n\nimport ButtonTimetable from \"@components/ButtonTimetable\";\nimport InputNumber from \"@components/InputNumber\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Week} from \"@config/config\";\nimport \"./AdminPanel.scss\"\n\n\ntype Props = {\n    dayIdx: number;\n    changeDay: () => void;\n    getPanelData: (group: number, semester: number, week: number, weekType: string) => void;\n}\n\nconst AdminPanel: React.FC<Props> = ({dayIdx, changeDay, getPanelData}) => {\n    const [panelLabel, setLabel] = React.useState(\"\")\n    const [groupInfo, setInfo] = React.useState({week: 0, group: 0, semester: 0, weekType: \"Чс\"})\n\n    const changeLabelInfo = React.useCallback((id, value) => {\n        const newInfo = groupInfo;\n        switch (id) {\n            case \"input-for-week\":\n                newInfo.week = value;\n                break;\n            case \"input-for-group\":\n                newInfo.group = value;\n                break;\n            case \"input-for-sem\":\n                newInfo.semester = value;\n                break;\n            case \"input-for-week-type\":\n                newInfo.weekType = value;\n                break;\n        }\n        /*if (newInfo.week !== 0 && !isNaN(newInfo.week) && newInfo.weekType !== \"\" && newInfo.semester !== 0\n            && !isNaN(newInfo.semester) && newInfo.group !== 0 && !isNaN(newInfo.group)) {\n            const newLabel = `${newInfo.week}-я Неделя, ${newInfo.weekType}, Группа ИУ10-${newInfo.semester}${newInfo.group}`\n            setLabel(newLabel)\n            getPanelData(newInfo.group, newInfo.semester, newInfo.week, newInfo.weekType)*/\n        if (newInfo.weekType !== \"\" && newInfo.semester !== 0\n            && !isNaN(newInfo.semester) && newInfo.group !== 0 && !isNaN(newInfo.group)) {\n            const newLabel = `Группа ИУ10-${newInfo.semester}${newInfo.group}, ${newInfo.weekType}`\n            setLabel(newLabel)\n            getPanelData(newInfo.group, newInfo.semester, newInfo.week, newInfo.weekType)\n        } else {\n            setLabel(\"\");\n        }\n        setInfo(newInfo);\n    }, [groupInfo, getPanelData])\n\n    return (\n        <div>\n            <div className=\"panel d-flex flex-column\">\n                <div className=\"panel__header\">\n                    Настройка параметров учебной группы\n                    <FontAwesomeIcon icon={faCogs} size={\"lg\"}\n                                     color={\"white\"}/>\n                </div>\n                <div className=\"panel__body\">\n                    {dayIdx !== -1 ?\n                        <ButtonTimetable\n                            onChange={changeDay}\n                            disabled={false}\n                            btn={{id: uuid(), color: \"#4fbfb4\"}}\n                        >\n                            <div className=\"d-flex flex-row flex-nowrap justify-content-around\">\n                                <FontAwesomeIcon icon={faPlus} size={\"lg\"}\n                                                 color={\"white\"}/>\n                                <span\n                                    className=\"DAndD-container__header__text_white\">{Week[dayIdx].day}</span>\n                            </div>\n                        </ButtonTimetable>\n                        : null}\n                    <div className=\"ml-1\">\n                        <InputNumber disabled placeholder=\"Неделя\" id=\"input-for-week\" min={1} max={17}\n                                     onChange={changeLabelInfo} defaultValue={NaN}/>\n                    </div>\n                    <InputNumber placeholder=\"Группа\" id=\"input-for-group\" min={1} max={5} onChange={changeLabelInfo}\n                                 defaultValue={NaN}/>\n                    <InputNumber placeholder=\"Семестр\" id=\"input-for-sem\" min={1} max={12} onChange={changeLabelInfo}\n                                 defaultValue={NaN}/>\n                    <div className=\"mr-1\">\n                        <select id=\"input-for-week-type\" defaultValue={\"1\"} className=\"panel__select\" onChange={(e) => {\n                            changeLabelInfo(\"input-for-week-type\", e.target.value)\n                        }}>\n                            <option value=\"Чс\">Чс</option>\n                            <option value=\"Зн\">Зн</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"panel__footer\">\n                    {panelLabel}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AdminPanel;"]},"metadata":{},"sourceType":"module"}