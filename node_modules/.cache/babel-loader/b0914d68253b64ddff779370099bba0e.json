{"ast":null,"code":"var _jsxFileName = \"/home/vlad/10tka/10tka-frontend/src/components/HiddenInput/HiddenInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./HiddenInput.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HiddenInput = ({\n  id,\n  disabled,\n  title,\n  onChange,\n  value\n}) => {\n  _s();\n\n  const handleChange = React.useCallback(e => {\n    if (onChange) {\n      onChange(e.target.value, id);\n    }\n  }, [onChange, id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hidden d-flex flex-column text-black-50\",\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: value,\n      onChange: handleChange,\n      placeholder: title && !disabled ? title : \"\",\n      className: \"hidden__text\",\n      style: {\n        display: disabled ? \"none\" : \"\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HiddenInput, \"y/H5GIiu8jog9Hni7mlqNguo+do=\");\n\n_c = HiddenInput;\nexport default HiddenInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"HiddenInput\");","map":{"version":3,"sources":["/home/vlad/10tka/10tka-frontend/src/components/HiddenInput/HiddenInput.tsx"],"names":["React","HiddenInput","id","disabled","title","onChange","value","handleChange","useCallback","e","target","display"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;;;AAWA,MAAMC,WAA4B,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA,QAAL;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA,QAAtB;AAAgCC,EAAAA;AAAhC,CAAD,KAA4C;AAAA;;AAC7E,QAAMC,YAAY,GAAGP,KAAK,CAACQ,WAAN,CAAmBC,CAAD,IAA+C;AAClF,QAAIJ,QAAJ,EAAc;AACVA,MAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASJ,KAAV,EAAiBJ,EAAjB,CAAR;AACH;AACJ,GAJoB,EAIlB,CAACG,QAAD,EAAWH,EAAX,CAJkB,CAArB;AAMA,sBACI;AAAc,IAAA,SAAS,EAAC,yCAAxB;AAAA,2BACI;AAAU,MAAA,KAAK,EAAEI,KAAjB;AAAwB,MAAA,QAAQ,EAAEC,YAAlC;AAAgD,MAAA,WAAW,EAAEH,KAAK,IAAI,CAACD,QAAV,GAAqBC,KAArB,GAA6B,EAA1F;AACU,MAAA,SAAS,EAAC,cADpB;AAEU,MAAA,KAAK,EAAE;AAACO,QAAAA,OAAO,EAAER,QAAQ,GAAG,MAAH,GAAY;AAA9B;AAFjB;AAAA;AAAA;AAAA;AAAA;AADJ,KAAUD,EAAV;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAdD;;GAAMD,W;;KAAAA,W;AAgBN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport \"./HiddenInput.scss\"\n\ntype Props = {\n    value: string,\n    onChange: (s: string, id: string) => void,\n    id: string,\n    disabled?: boolean,\n    title?: string\n    buttonId?: string,\n}\n\nconst HiddenInput: React.FC<Props> = ({id, disabled, title, onChange, value}) => {\n    const handleChange = React.useCallback((e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        if (onChange) {\n            onChange(e.target.value, id);\n        }\n    }, [onChange, id]);\n\n    return (\n        <div key={id} className=\"hidden d-flex flex-column text-black-50\">\n            <textarea value={value} onChange={handleChange} placeholder={title && !disabled ? title : \"\"}\n                      className=\"hidden__text\"\n                      style={{display: disabled ? \"none\" : \"\"}}/>\n        </div>\n    )\n}\n\nexport default HiddenInput;"]},"metadata":{},"sourceType":"module"}