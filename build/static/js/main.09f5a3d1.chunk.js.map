{"version":3,"sources":["config/urls.ts","utils/privateRoute.tsx","pages/Authorization/config.ts","components/Timer/Timer.tsx","media/student.png","media/admin.jpg","components/AuthError/AuthError.tsx","utils/network.ts","pages/Authorization/Authorization.tsx","components/Header/Header.tsx","components/ButtonTimetable/ButtonTimetable.tsx","components/HiddenInput/HiddenInput.tsx","components/ButtonWithInput/ButtonWithInput.tsx","components/InputNumber/InputNumber.tsx","config/config.ts","components/AdminPanel/AdminPanel.tsx","components/ButtonsLogo/ButtonsLogo.tsx","components/DragAndDrop/DroppableElem/DroppableElem.tsx","components/DragAndDrop/DraggableArea/DraggableArea.tsx","components/IconPlus/IconPlus.tsx","components/DragAndDrop/DroppableArea/DroppableArea.tsx","components/DragAndDrop/config.ts","components/Card/Card.tsx","components/Lesson/Lesson.tsx","components/Pagination/pagination.tsx","components/Blog/blogTag.tsx","components/PostCommentView/PostComment.tsx","components/StatusLabel/StatusLabel.tsx","components/ViewPost/ViewPost.tsx","pages/PostsList/PostsList.tsx","pages/Home/Home.tsx","components/DragAndDrop/DAndD.tsx","pages/Timetable/timetable.tsx","pages/NotFound/NotFound.tsx","components/AutoCompleteInput/AutoInput.tsx","components/Tags/config.ts","components/Tags/Tags.tsx","pages/UsersControl/config.ts","pages/UsersControl/usersTables/usersTables.tsx","pages/UsersControl/UsersControl.tsx","components/PulseCheckBox/pulseCheckBox.tsx","pages/PostCreate/createPost.tsx","pages/Profile/Profile.tsx","App/App.tsx","index.tsx"],"names":["DOMAIN","BASE_URL","USER_URL","TIMETABLE_URL","AUTH_URL","PANEL_URL","POST_URL","FEED_URL","Urls","root","user","slugRoot","slugMe","slugProfile","postCreate","postUpdate","getUser","id","getStudentsAll","getProfessorsAll","feed","timetable","slugEdit","get","group","week","post","delete","panel","slugCreate","getCurrent","getById","getList","start","limit","getUploadUrl","postId","discipline","getAll","auth","notFound","PrivateRoute","Component","component","rest","useHistory","render","props","location","pathname","to","state","from","EMPTY_PASSWORD_FIELD","ERROR_EMAIL_FIELD","ERROR_PASSWORD_FIELD","USER_TYPE_STUDENT","USER_TYPE_PROFESSOR","USER_TYPE_METHODIST","secondsToTime","s","h","Math","trunc","m","Timer","onZero","size","useState","time","seconds","changeTime","isActive","setActive","OnStopCallback","useCallback","useEffect","timer","window","setInterval","clearInterval","className","style","fontSize","xs","lg","AuthError","msg","React","memo","axios","defaults","withCredentials","makeGet","url","a","method","headers","makePost","data","makePut","makeDelete","Logout","history","then","r","catch","e","localStorage","clear","replace","Auth","email","setEmail","password","setPassword","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","formValid","setFormValid","userError","setUserError","checkBox","setCheckBox","CheckBoxHandler","target","checked","HandleSubmit","preventDefault","checkbox","response","setItem","Date","now","toString","role","push","error","status","EmailHandler","emailNew","value","test","String","toLowerCase","PasswordHandler","passwdNew","length","BlurHandler","name","onBlur","onChange","type","placeholder","disabled","onClick","Header","useLocation","collapseIsOpen","collapseChange","toggleCollapse","path","includes","urlPath","split","parseInt","Rendered","color","dark","expand","isOpen","navbar","left","active","getItem","right","src","Admin","Avatar","alt","sm","basic","ButtonTimetable","btn","children","background","title","HiddenInput","handleChange","display","ButtonWithInput","onBtnChange","onInputChange","onAreaChange","inputs","activeInput","areaValue","changeValueArea","inputValue","changeValueInput","collapseOpen","changeCollapse","changeAreaValue","maxAreaLength","setActiveElement","disableInputs","changeInputValue","maxInputLength","buttonFields","buttonCollapse","InputNumber","min","max","defaultValue","setValue","intValue","Week","day","date","buttonsContent","LessonsTime","TAG_GENERAL","TAG_IMPORTANT","TAG_EDUCATIONAL","AdminPanel","dayIdx","changeDay","getPanelData","panelLabel","setLabel","semester","weekType","groupInfo","setInfo","changeLabelInfo","newInfo","isNaN","newLabel","icon","faCogs","uuid","faPlus","NaN","btnLogo","require","bind","btnXs","ButtonsLogo","idx","backgroundColor","DroppableElem","sourceIdx","header","footer","isEmpty","faMapMarkerAlt","DraggableArea","droppableColumn","droppableId","isDropDisabled","provided","ref","innerRef","map","item","index","draggableId","snapshot","Fragment","draggableProps","dragHandleProps","border","isDragging","faBars","opacity","IconPlus","faTimes","DroppableArea","Lists","removeList","removeItem","Object","keys","list","isDraggingOver","faClock","Labels","LabelsInt","findNextDay","some","saveTimetable","deleted","panelData","showLabel","week_type","week_number","days","forEach","i","day_order","lessons","lesson","lesson_order","lesson_id","auditorium","lesson_type","content","success","console","log","lessons_ids","resp","postWeekData","err","Card","currentDay","items","elem","Lesson","Pagination","circle","BlogTag","CommentView","key","text","viewByAuthor","answers","commentAuthor","onDeleteClick","StatusLabel","info","shown","isShown","setTimeout","clearTimeout","PostView","label","isOutputFull","changeOutputFull","isLiked","changeLiked","likesCnt","changeLikesCnt","commentsCnt","comments","changeComments","post_id","author_id","tag_type","created","is_edited","postData","changePostData","message","deletePost","HTMLReactParser","href","document","getElementById","click","undefined","oldComments","authorAvatarPath","commentId","author","n","text_forms","n1","abs","declOfNum","comment","findIndex","c","splice","deleteComment","alert","PostsList","posts","changePosts","oldPosts","postsList","prepareWeek","weekDays","newList","getWeekType","Home","weekDay","weekInfo","changeWeekInfo","orgInfo","changeOrgInfo","changeLessons","today","getDate","getDay","weekAgo","monthIdx","getMonth","months","floor","getWeekData","weekData","userGroup","savedWeek","DragAndDrop","changeDeleted","changeList","changeDayIdx","areasValue","setAreasValues","inputsValue","setValues","setPanelData","changeArea","oldAreas","changeInput","oldInputs","useMemo","onDragEnd","result","source","destination","header_text","footer_text","startIndex","endIndex","Array","removed","reorder","draggable","droppableIndex","destClone","copy","AddList","deletedLessons","getPanelDataHandler","faSave","Timetable","NotFoundPage","homeRedirectHandler","goBack","AutoInput","inputProps","dataList","createElement","input","setAttribute","option","dataListOption","appendChild","ERROR_TAG_FIELD","Tags","tags","changeTags","selectList","noFocus","errMsg","tagInput","setTagInp","handleInput","tagInfo","tag","isTagValid","handleBlur","handleDelete","tagsOld","tagId","obj","addTag","tagOld","MAX_SNP","ERROR_NAME_FIELD","ERROR_SURNAME_FIELD","ERROR_PATRONYMIC_FIELD","ERROR_ABOUT_FIELD","btnPasswd","len","generatePassword","checkRussian","str","UsersTable","userType","rowClickEvent","needDownload","setDownload","timerRedo","setTimerRedo","isReady","setReady","columns","rows","setData","handleClick","users","responseConverter","finally","tableDataTemplate","field","sort","surname","patronymic","phone","student_group","disciplines","prof_disciplines_str","substring","join","about","clickEvent","handleRedo","faRedoAlt","hover","striped","infoLabel","paginationLabel","noRecordsFoundLabel","bordered","responsive","small","InitialUser","sem","UsersControl","inputPasswd","setInputPasswd","userInfo","setUserInfo","setTimer","setDisciplines","wasEdit","oldPhone","oldEmail","isDataForEdit","changeEditFlag","btnText","setBtnText","userValid","setUserValid","inputElem","handleSubmit","fieldsCanBeEmpty","isFormValid","isValid","canBeEmpty","noEmptyFields","notEmpty","newUser","trim","prof_disciplines","dis","handlePassword","oldUser","oldUserValid","handleUserInfo","telephone","numbersOld","numbersNew","handleInputId","handleUserEdit","slice","prepareUser","d","discipline_content","newTags","oldInfo","PulseCheckBox","description","isChecked","changeChecked","CreatePost","postImgUrl","allowComments","buttonText","postInfo","changePostInfo","changeTag","tagVal","changeTagVal","postImgInput","changePostImgInput","isTextChanged","changeTextFlag","setPostId","handleTitleChange","handleEditorChange","editor","handleButtonChange","getTinymce","activeEditor","execCommand","handleSelectChange","handleCheckBoxChange","filePickerCb","callback","meta","filetype","file","onchange","files","reader","FileReader","onload","readAsDataURL","accept","oldPost","URL","createObjectURL","hidden","apiKey","init","language","min_height","height","max_height","plugins","toolbar","style_formats_merge","style_formats","selector","styles","insertdatetime_formats","image_advtab","fullscreen_native","automatic_uploads","image_description","file_picker_types","paste_webkit_styles","paste_retain_style_properties","paste_data_images","paste_as_text","images_upload_url","file_picker_callback","content_style","onEditorChange","outline","Profile","imgUrl","changeImgUrl","App","exact","ViewPost","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.09f5a3d1.chunk.js","sourcesContent":["//export const DOMAIN = \"http://localhost:8080/api/v1/\";\n\nexport const DOMAIN = \"https://10-tka.ru/api/v1/\";\nexport const ADD_USER = \"users/create\"\nexport const LOGIN = \"users/login\";\nexport const LOGOUT = \"users/logout\";\nexport const ME = \"users/me\"\n\nconst BASE_URL = \"/\";\nconst ANY_URL = \"*\";\nconst USER_URL = `${BASE_URL}users`;\nconst TIMETABLE_URL = `${BASE_URL}timetable`;\nconst AUTH_URL = `${BASE_URL}auth`;\nconst PANEL_URL = `${BASE_URL}panel`;\nconst POST_URL = `${BASE_URL}posts`\nconst FEED_URL = `${BASE_URL}feed`\n\nexport const Urls = {\n    root: BASE_URL,\n    user: {\n        slugRoot: USER_URL,\n        slugMe: `${USER_URL}/me`,\n        slugProfile: `${USER_URL}/profile/`,\n\n        postCreate: () => `${DOMAIN}users/`,\n        postUpdate: () => `${DOMAIN}users/`,\n        getUser: (id: string | number) => `${USER_URL}/profile/${id}`,\n        getStudentsAll: () => `${DOMAIN}users/students`,\n        getProfessorsAll: () => `${DOMAIN}users/professors`,\n    },\n    feed: {\n        slugRoot: FEED_URL\n    },\n    timetable: {\n        slugRoot: TIMETABLE_URL,\n        slugEdit: `${TIMETABLE_URL}/edit`,\n        get: (group: string, week: number) => `${DOMAIN}timetable/${group}/${week}`,\n        post: () => `${TIMETABLE_URL}/create`,\n        delete: () => `${TIMETABLE_URL}/`\n    },\n    panel: {\n        slugRoot: PANEL_URL,\n    },\n    post: {\n        slugRoot: POST_URL,\n        slugCreate: `${POST_URL}/create`,\n        getCurrent: () => `${DOMAIN}posts/current-id`,\n        getById: (id: number) => `${DOMAIN}posts/${id}`,\n        getList: (start: number, limit: number) => `${DOMAIN}posts/list?start=${start}&limit=${limit}`,\n        getUploadUrl: (postId: number) => `${DOMAIN}posts/${postId}/upload-image`,\n        post: () => `${DOMAIN}posts/`,\n        delete: (id: number) => `${DOMAIN}posts/${id}`,\n    },\n    discipline: {\n        getAll: () => `${DOMAIN}disciplines/all`\n    },\n    auth: AUTH_URL,\n    notFound: ANY_URL,\n}","import {Redirect, Route, useHistory} from \"react-router-dom\";\nimport {DOMAIN, ME, Urls} from \"@config/urls\"\nimport React, {useEffect} from \"react\";\nimport {makeGet} from \"@utils/network\";\nimport {DefaultCheckLogin} from \"../pages/Authorization\";\n\ntype Props = {\n    component: any;\n    path: string;\n    exact?: boolean;\n}\n\nexport const PrivateRoute: React.FC<Props> = ({component: Component, ...rest}) => {\n    const history = useHistory()\n\n    // useEffect(() => {\n    //     const ServerCheckLogin = async () => {\n    //         return makeGet(`${DOMAIN}${ME}`);\n    //     }\n    //\n    //     ServerCheckLogin().then((r) => {\n    //         if (r.status !== 200) {\n    //             localStorage.setItem(\"loginTime\", \"\");\n    //             history.push(Urls.auth)\n    //         }\n    //     }).catch(() => {\n    //         localStorage.setItem(\"loginTime\", \"\");\n    //         history.push(Urls.auth)\n    //     })\n    // }, [history, history.location.pathname])\n\n    //const authed = DefaultCheckLogin();\n    const authed = true;\n\n    return (\n        <Route {...rest}\n               render={props => authed ?\n                   props.location.pathname === \"/\" ?\n                       <Redirect to={{\n                           pathname: Urls.feed.slugRoot,\n                           state: {from: props.location}\n                       }}\n                       /> :\n                       (<Component {...props} />) :\n                   <Redirect to={{\n                       pathname: Urls.auth,\n                       state: {from: props.location}\n                   }}\n                   />\n               }\n        />\n    )\n}","export const DEFAULT_SESSION_TIME = 3 * 24 * 60 * 60 * 1000; // 3 days in ms\nexport const PROTECTED_SESSION_TIME = 2 * 3600; // 2 hours in sec\nexport const ERROR_SERVER = \"Внутренняя ошибка сервера, попробуйте позже!\";\nexport const SERVER_UNAVAILABLE = \"Связь с сервером потеряна!\";\nexport const ERROR_AUTHORIZATION = \"Неверное имя пользователя или пароль!\";\nexport const PASSWORD_MAX_LENGTH = 35;\nexport const PASSWORD_MIN_LENGTH = 5;\nexport const EMPTY_EMAIL_FIELD = \"Email не может быть пустым!\";\nexport const EMPTY_PASSWORD_FIELD = \"Пароль не может быть пустым!\";\nexport const ERROR_EMAIL_FIELD = \"Некорректный email!\";\nexport const ERROR_PASSWORD_FIELD = `Длина пароля должна быть от ${PASSWORD_MIN_LENGTH} до ${PASSWORD_MAX_LENGTH} символов!`;\n\nexport const USER_TYPE_STUDENT = \"student\";\nexport const USER_TYPE_PROFESSOR = \"professor\";\nexport const USER_TYPE_ADMIN = \"admin\";\nexport const USER_TYPE_METHODIST = \"methodist\";\nexport const USER_TYPE_GUEST = \"guest\";","import React, {useEffect, useState, useCallback} from \"react\";\n\nimport {PROTECTED_SESSION_TIME} from \"../../pages/Authorization/config\";\n\nconst secondsToTime = (s: number) => {\n    const h = Math.trunc(s / 3600);\n    const m = Math.trunc(s / 60 - 60 * h);\n    s = s - 3600 * h - 60 * m\n    return {\n        h: h,\n        m: m,\n        s: s\n    };\n}\n\ntype Props = {\n    id?: string,\n    onZero?: () => void,\n    size: { sm?: boolean, xs?: boolean, lg?: boolean }\n}\n\nconst Timer: React.FC<Props> = ({id, onZero, size}) => {\n\n    const [time, changeTime] = useState({time: secondsToTime(PROTECTED_SESSION_TIME), seconds: PROTECTED_SESSION_TIME});\n    const [isActive, setActive] = useState(true);\n\n    const OnStopCallback = useCallback(\n        () => {\n            if (onZero) {\n                onZero();\n            }\n        },\n        [onZero],\n    );\n\n    const getSize = () => {\n        if (size.xs) {\n            return \"0.7rem\";\n        }\n        return size.lg ? \"1.2rem\" : \"0.9rem\";\n    }\n\n    useEffect(() => {\n        let timer = 0;\n        if (isActive) {\n            timer = window.setInterval(() => {\n                let seconds = time.seconds - 1;\n                changeTime({\n                    time: secondsToTime(seconds),\n                    seconds: seconds,\n                });\n                if (seconds === 0 && isActive) {\n                    setActive(!isActive);\n                    OnStopCallback();\n                }\n            }, 1000);\n        } else if (!isActive && time.seconds !== 0) {\n            window.clearInterval(timer);\n        }\n        return () => window.clearInterval(timer);\n    }, [isActive, time.seconds, OnStopCallback]);\n\n    return (\n        <div key={id} className=\"d-flex\">\n            <div style={{fontSize: getSize()}}>\n                {time.time.h}:{time.time.m}:{time.time.s}\n            </div>\n        </div>\n    );\n}\n\nexport default Timer;\n\n","export default __webpack_public_path__ + \"static/media/student.72adb2a4.png\";","export default __webpack_public_path__ + \"static/media/admin.bb4d60bc.jpg\";","import React from \"react\";\nimport \"./AuthError.scss\"\n\ntype Props = {\n    msg: string\n}\n\nconst AuthError:React.FC<Props> = ({msg}) => {\n    return (\n        <div className=\"Auth__error\">{msg}</div>\n    )\n}\n\nexport default React.memo(AuthError);","import axios from \"axios\";\naxios.defaults.withCredentials = true;\n\nexport const makeGet = async (url: string) => {\n    return axios({\n        method: \"get\",\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n        withCredentials: true,\n        url: url\n    });\n};\n\nexport const makePost = async (url: string, data: any) => {\n    return axios({\n        method: \"post\",\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n\n        url: url,\n        data: data,\n        withCredentials: true\n    });\n};\n\nexport const makePut = async (url: string, data: any) => {\n    return axios({\n        method: \"put\",\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n\n        url: url,\n        data: data,\n        withCredentials: true\n    });\n};\n\nexport const makeDelete = async (url: string, data: any) => {\n    return axios({\n        method: \"delete\",\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n        url: url,\n        data: data,\n        withCredentials: true\n    });\n};\n\n","import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\"\n\nimport {DOMAIN, LOGIN, LOGOUT, Urls} from \"@config/urls\";\n\nimport {\n    DEFAULT_SESSION_TIME,\n    EMPTY_EMAIL_FIELD,\n    EMPTY_PASSWORD_FIELD,\n    ERROR_AUTHORIZATION,\n    ERROR_EMAIL_FIELD,\n    ERROR_PASSWORD_FIELD,\n    ERROR_SERVER,\n    PASSWORD_MAX_LENGTH,\n    PASSWORD_MIN_LENGTH,\n    SERVER_UNAVAILABLE\n} from \"./config\";\nimport \"./Authorization.scss\"\nimport AuthError from \"@components/AuthError\";\nimport {makePost} from \"@utils/network\";\nimport {addUsers} from \"@utils/addUsers\";\n\nexport const Logout = (history: any) => {\n    makePost(`${DOMAIN}${LOGOUT}`, null).then((r) => {\n    }).catch((e) => {\n    })\n    localStorage.clear()\n    history.replace(Urls.auth);\n}\n\nexport const DefaultCheckLogin = () => {\n    const lastAuthTime = parseInt(localStorage.getItem(\"loginTime\") as string);\n    return lastAuthTime != null && Date.now() - lastAuthTime < DEFAULT_SESSION_TIME;\n}\n\nconst Auth = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [emailDirty, setEmailDirty] = useState(false);\n    const [passwordDirty, setPasswordDirty] = useState(false);\n    const [emailError, setEmailError] = useState(EMPTY_EMAIL_FIELD);\n    const [passwordError, setPasswordError] = useState(EMPTY_PASSWORD_FIELD);\n    const [formValid, setFormValid] = useState(false);\n    const [userError, setUserError] = useState('');\n    const [checkBox, setCheckBox] = useState(false);\n    const history = useHistory();\n\n    const CheckBoxHandler = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setCheckBox(e.target.checked);\n    }, []);\n\n    const HandleSubmit = React.useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n\n        //addUsers();\n\n        // localStorage.setItem(\"loginTime\", Date.now().toString());\n        // localStorage.setItem(\"user_role\", 'admin')\n        // const userGroup = \"IU10-83\";\n        // history.push(Urls.feed.slugRoot);\n\n        makePost(`${DOMAIN}${LOGIN}`, {\n            email: email,\n            password: password,\n            checkbox: checkBox\n        }).then((response) => {\n            localStorage.setItem(\"loginTime\", Date.now().toString());\n            const userGroup = response.data.user.group;\n            //console.log(\"User = \", response.data.user)\n            if (userGroup !== \"\") {\n                localStorage.setItem(\"user_group\", response.data.user.group)\n            }\n            localStorage.setItem(\"user_role\", response.data.user.role)\n            history.push(Urls.feed.slugRoot);\n        }).catch((error) => {\n            if (error.response) {\n                if (error.response.status === 404) {\n                    setUserError(ERROR_AUTHORIZATION);\n                } else {\n                    setUserError(ERROR_SERVER);\n                }\n            } else {\n                setUserError(SERVER_UNAVAILABLE);\n            }\n            return;\n        });\n\n    }, [email, password, checkBox, history]);\n\n    useEffect(() => {\n        if (emailError || passwordError) {\n            setFormValid(false);\n        } else {\n            setFormValid(true);\n        }\n    }, [emailError, passwordError]);\n\n    const EmailHandler = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        const emailNew = e.target.value;\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!re.test(String(emailNew).toLowerCase())) {\n            setEmailError(ERROR_EMAIL_FIELD)\n        } else setEmailError('');\n        setEmail(emailNew);\n    }, []);\n\n    const PasswordHandler = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        const passwdNew = e.target.value;\n        if (passwdNew.length < PASSWORD_MIN_LENGTH || passwdNew.length > PASSWORD_MAX_LENGTH) {\n            setPasswordError(ERROR_PASSWORD_FIELD);\n            if (!passwdNew.length) {\n                setPasswordError(EMPTY_PASSWORD_FIELD);\n            }\n        } else setPasswordError('');\n        setPassword(passwdNew);\n    }, []);\n\n    const BlurHandler = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.name === \"email\") {\n            setEmailDirty(true);\n        } else {\n            setPasswordDirty(true);\n        }\n        setUserError(\"\");\n    }, []);\n\n    return (\n        <div className=\"container-fluid d-flex h-100 justify-content-center align-items-center text-center\">\n            <div className=\"row bg-white shadow-sm m-1\">\n                <div className=\"col border rounded p-4\">\n                    <form>\n                        <div className=\"form-group\">\n                            <div>Email</div>\n                            {(emailDirty && emailError) && <AuthError msg={emailError}/>}\n                            <input onBlur={BlurHandler} onChange={EmailHandler} value={email}\n                                   type=\"text\" className=\"form-control\" name=\"email\" placeholder=\"Введите email...\"/>\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">Мы не передаем ваши данные\n                                сторонним источникам</small>\n                        </div>\n                        <div className=\"form-group\">\n                            <div>Пароль</div>\n                            {(passwordDirty && passwordError) && <AuthError msg={passwordError}/>}\n                            <input onBlur={BlurHandler} onChange={PasswordHandler} value={password}\n                                   className=\"form-control\" type=\"password\"\n                                   placeholder=\"Введите пароль...\"/>\n                        </div>\n                        <div className=\"d-flex flex-row justify-content-center align-items-center\">\n                            <input className=\"mr-1\" onChange={CheckBoxHandler} type=\"checkbox\"/>\n                            <div>Запомнить меня</div>\n                        </div>\n                        <div className=\"p-0\"> {(userError) && <AuthError msg={userError}/>}</div>\n                        <div className=\"p-3\">\n                            <button disabled={!formValid} onClick={HandleSubmit} type=\"submit\"\n                                    className=\"btn Auth__btn mt-2\">Войти\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Auth;\n","import React, {useCallback, useState} from \"react\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {\n    MDBNavbar,\n    MDBNavbarBrand,\n    MDBNavbarNav,\n    MDBNavItem,\n    MDBNavLink,\n    MDBNavbarToggler,\n    MDBCollapse,\n    MDBDropdown,\n    MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem\n} from \"mdbreact\";\n\nimport Timer from \"@components/Timer\";\nimport Avatar from \"@media/student.png\"\nimport Admin from \"@media/admin.jpg\"\nimport {Urls} from \"@config/urls\";\n\nimport {Logout} from \"../../pages/Authorization\";\nimport \"./Header.scss\"\n\n\nconst Header = () => {\n    const location = useLocation();\n    const history = useHistory();\n\n    const Rendered = () => {\n        const path = location.pathname;\n        let postId = 0;\n        if (path.includes(\"posts\")) {\n            let urlPath = path.split(\"/\");\n            postId = parseInt(urlPath[urlPath.length - 1]);\n        }\n        return [Urls.feed.slugRoot, Urls.timetable.slugEdit,\n        Urls.panel.slugRoot, Urls.root,\n        `${Urls.post.slugRoot}/${postId}`, Urls.post.slugCreate,\n        Urls.user.slugMe, Urls.user.slugRoot, Urls.user.slugProfile].includes(path)\n    }\n\n    const [collapseIsOpen, collapseChange] = useState(false);\n\n    const toggleCollapse = useCallback(() => {\n        collapseChange(!collapseIsOpen);\n    }, [collapseIsOpen]);\n\n    return (\n        <div>\n            {Rendered() ? <div className=\"navbar__main\">\n                <MDBNavbar className=\"mb-3\" color=\"teal lighten-2\" dark expand=\"md\">\n                    <MDBNavbarBrand>\n                        <strong className=\"white-text\">10-tka</strong>\n                    </MDBNavbarBrand>\n                    <MDBNavbarToggler onClick={toggleCollapse}/>\n                    <MDBCollapse id=\"navbarCollapse3\" isOpen={collapseIsOpen} navbar>\n                        <MDBNavbarNav left className=\"col-lg-8\">\n                            <MDBNavItem active>\n                                <MDBNavLink className=\"navbar__main_link\" to={Urls.feed.slugRoot}>\n                                    <div className=\"navbar__main_strong\">Главная</div>\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem active>\n                                <MDBNavLink className=\"navbar__main_link\" to={Urls.post.slugCreate}>\n                                    <div className=\"navbar__main_strong\">Создать пост</div>\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem active>\n                                <MDBNavLink className=\"navbar__main_link\" to={Urls.timetable.slugEdit}>\n                                    <div className=\"navbar__main_strong\">Конструктор расписания</div>\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            {localStorage.getItem(\"user_role\") === \"admin\" ?\n                                <MDBNavItem active>\n                                    <MDBNavLink className=\"navbar__main_link\" to={Urls.panel.slugRoot}>\n                                        <div className=\"navbar__main_strong\">Пользователи</div>\n                                    </MDBNavLink>\n                                </MDBNavItem> : null}\n\n                            <MDBNavItem active className=\"d-md-none\">\n                                <button type=\"button\"\n                                        className=\"link-logout\"\n                                        onClick={() => {\n                                            Logout(history)\n                                        }}>\n                                    <div className=\"navbar__main_strong\">Выход</div>\n                                </button>\n                            </MDBNavItem>\n                        </MDBNavbarNav>\n                        <MDBNavbarNav right className=\" d-none d-md-block\">\n                            <div\n                                className=\"d-flex align-items-center justify-content-end flex-nowrap\">\n                                <MDBNavItem>\n                                    <img className=\"navbar__avatar\"\n                                         src={localStorage.getItem(\"user_role\") === \"admin\" ? Admin : Avatar}\n                                         alt=\"oops\"/>\n                                </MDBNavItem>\n                                <MDBNavItem\n                                    className=\"container-fluid flex-column justify-content-center text-center\">\n                                    <span\n                                        className=\"main__title\">{localStorage.getItem(\"user_role\") === \"admin\" ? \"Admin\" : \"Вася Пупкин\"}</span>\n                                    <div className=\"text-black-50\">\n                                        <Timer size={{sm: true}} onZero={() => {\n                                            Logout(history);\n                                        }}/>\n                                    </div>\n                                </MDBNavItem>\n                                <MDBNavItem>\n                                    <MDBDropdown>\n                                        <MDBDropdownToggle className=\"dropdown-toggle navbar__dropdown\">\n                                        </MDBDropdownToggle>\n                                        <MDBDropdownMenu right basic>\n                                            <MDBDropdownItem onClick={() => {\n                                                history.push(Urls.user.slugMe)\n                                            }}>Профиль</MDBDropdownItem>\n                                            <MDBDropdownItem onClick={() => {\n                                                Logout(history);\n                                            }}>Выйти</MDBDropdownItem>\n                                        </MDBDropdownMenu>\n                                    </MDBDropdown>\n                                </MDBNavItem>\n                            </div>\n                        </MDBNavbarNav>\n                    </MDBCollapse>\n                </MDBNavbar>\n            </div> : null}\n        </div>\n    );\n}\n\nexport default Header;\n\n","import React from \"react\";\nimport \"./ButtonTimetable.scss\"\n\ntype Props = {\n    onChange: (id: string) => void,\n    disabled?: boolean\n    btn: {id: string, title?: string, color: string }\n}\n\nconst ButtonTimetable: React.FC<Props> = ({onChange, disabled, btn, children}) => {\n    return (\n        <button className=\"btn-custom\" type=\"button\"\n                disabled={disabled}\n                onClick={() => {\n                    onChange(btn.id)\n                }}\n                style={{background: btn ? btn.color : \"\"}}>\n            {btn.title ? <span className=\"btn-custom__title\">{btn.title}</span> : children}\n        </button>\n    )\n}\n\nexport default ButtonTimetable;","import React from \"react\";\nimport \"./HiddenInput.scss\"\n\ntype Props = {\n    value: string,\n    onChange: (s: string, id: string) => void,\n    id: string,\n    disabled?: boolean,\n    title?: string\n    buttonId?: string,\n}\n\nconst HiddenInput: React.FC<Props> = ({id, disabled, title, onChange, value}) => {\n    const handleChange = React.useCallback((e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        if (onChange) {\n            onChange(e.target.value, id);\n        }\n    }, [onChange, id]);\n\n    return (\n        <div key={id} className=\"hidden d-flex flex-column text-black-50\">\n            <textarea value={value} onChange={handleChange} placeholder={title && !disabled ? title : \"\"}\n                      className=\"hidden__text\"\n                      style={{display: disabled ? \"none\" : \"\"}}/>\n        </div>\n    )\n}\n\nexport default HiddenInput;","import React from \"react\";\nimport {MDBCollapse} from \"mdbreact\";\nimport ButtonTimetable from \"@components/ButtonTimetable\";\nimport HiddenInput from \"@components/HiddenInput\";\n\nimport \"./ButtonWithInput.scss\"\n\ntype Props = {\n    onInputChange?: (id: string, value: string) => void;\n    onAreaChange?: (id: string, value: string) => void;\n    onBtnChange?: () => void,\n    inputs?: { maxInputLength: number, maxAreaLength: number }\n    btn: { id: string, title?: string, color: string, disableInputs?: boolean }\n}\n\nconst ButtonWithInput: React.FC<Props> = ({btn, onBtnChange, onInputChange, onAreaChange, inputs}) => {\n    const [activeInput, setActive] = React.useState(true);\n    const [areaValue, changeValueArea] = React.useState(\"\");\n    const [inputValue, changeValueInput] = React.useState(\"\");\n    const [collapseOpen, changeCollapse] = React.useState(false)\n\n    const changeAreaValue = React.useCallback((value: string) => {\n        if (inputs && inputs.maxAreaLength < value.length) {\n            return;\n        }\n        changeValueArea(value);\n        if (onAreaChange) {\n            onAreaChange(btn.id, value);\n        }\n    }, [onAreaChange, btn.id, inputs])\n\n    const setActiveElement = React.useCallback(() => {\n        if (btn.disableInputs) {\n            changeCollapse(!collapseOpen)\n        } else {\n            setActive(!activeInput);\n            if (onBtnChange) {\n                onBtnChange();\n            }\n        }\n    }, [onBtnChange, activeInput, collapseOpen, btn.disableInputs])\n\n    const changeInputValue = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value;\n        if (inputs && inputs.maxInputLength < value.length) {\n            return;\n        }\n        changeValueInput(value);\n        if (onInputChange) {\n            onInputChange(btn.id, value);\n        }\n    }, [onInputChange, btn.id, inputs]);\n\n\n    const buttonFields = React.useCallback(() => (\n        <div className=\"d-flex flex-row align-content-center\">\n            <div className=\"m-1\">\n                <HiddenInput id={btn.id} value={areaValue}\n                             onChange={changeAreaValue} disabled={activeInput} title={\"Дисциплина\"}/>\n            </div>\n            <div className=\"m-1\">\n                <input id={btn.id} value={inputValue} className=\"btn-mdb-input\" type=\"text\" placeholder=\"Ауд\"\n                       style={{display: activeInput ? \"none\" : \"\"}}\n                       onChange={(e) => {\n                           changeInputValue(e)\n                       }}/>\n            </div>\n        </div>\n    ), [btn.id, inputValue, changeInputValue, changeAreaValue, areaValue, activeInput]);\n\n    const buttonCollapse = React.useCallback(() => (\n        <MDBCollapse id={btn.id} isOpen={collapseOpen}>\n            <span className=\"collapse-text m-1\">\n                Используйте для создания пропусков между парами.\n            </span>\n        </MDBCollapse>\n    ), [btn.id, collapseOpen]);\n\n    return (\n        <div className=\"d-flex flex-row align-content-center\">\n            <ButtonTimetable disabled={false}\n                             onChange={setActiveElement}\n                             btn={btn}/>\n            {!btn.disableInputs ? buttonFields() : buttonCollapse()}\n        </div>\n    )\n}\n\nexport default ButtonWithInput;","import React, {useCallback, useEffect, useState} from \"react\";\nimport \"./InputNumber.scss\"\n\ntype Props = {\n    disabled?: boolean;\n    placeholder: string;\n    id: string;\n    min: number;\n    max: number;\n    onChange?: (id: string, value: number) => void;\n    defaultValue: number\n}\n\nconst InputNumber: React.FC<Props> = ({id, min, max, onChange, placeholder, disabled, defaultValue}) => {\n    const [value, setValue] = useState(\"\");\n\n    useEffect(() => {\n        setValue(defaultValue.toString());\n    }, [defaultValue])\n\n    const changeInputValue = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value;\n        let intValue = parseInt(value);\n        if (intValue < min || intValue > max) {\n            return;\n        }\n        setValue(value);\n        if (onChange) {\n            onChange(id, intValue);\n        }\n    }, [onChange, id, min, max])\n\n    return (\n        <input disabled={disabled} type=\"number\" placeholder={placeholder} className=\"input-number\"\n               value={value}\n               onChange={changeInputValue}/>\n    );\n\n}\n\nexport default InputNumber;","export const Week = [\n    {id: 0, day: \"Пн\", date: \"\"},\n    {id: 1, day: \"Вт\", date: \"\"},\n    {id: 2, day: \"Ср\", date: \"\"},\n    {id: 3, day: \"Чт\", date: \"\"},\n    {id: 4, day: \"Пт\", date: \"\"},\n    {id: 5, day: \"Сб\", date: \"\"},\n    {id: 6, day: \"Вс\", date: \"\"},\n]\n\nexport const buttonsContent = [\n    {id: \"btn-0\", title: \"СЕМ\", color: \"#348A3D\"},\n    {id: \"btn-1\", title: \"ЛЕК\", color: \"#62d76e\"},\n    {id: \"btn-2\", title: \"ЛР\", color: \"#8ebd3b\"},\n    {id: \"btn-3\", title: \"ДЗ\", color: \"#e8722c\"},\n    {id: \"btn-4\", title: \"РК\", color: \"#eabf19\"},\n    {id: \"btn-5\", title: \"КОНС\", color: \"#5c70d9\"},\n    {id: \"btn-6\", title: \"ЭКЗ\", color: \"#ce2c2c\"},\n    {id: \"btn-7\", title: \"СР\", color: \"#3ca490\", disableInputs: true},\n]\n\nexport const LessonsTime = [\n    \"8:30 - 10:05\",\n    \"10:15 - 11:50\",\n    \"12:00 - 13:35\",\n    \"13:50 - 15:25\",\n    \"15:40 - 17:15\",\n    \"17:25 - 19:00\",\n    \"19:10 - 20:45\",\n]\n\n//blog\nexport const TAG_GENERAL = \"Общие вопросы\";\nexport const TAG_IMPORTANT = \"Важное\";\nexport const TAG_EDUCATIONAL = \"Учебная работа\";","import React from \"react\";\nimport {v4 as uuid} from \"uuid\";\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons/faPlus\";\nimport {faCogs} from \"@fortawesome/free-solid-svg-icons/faCogs\";\n\nimport ButtonTimetable from \"@components/ButtonTimetable\";\nimport InputNumber from \"@components/InputNumber\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Week} from \"@config/config\";\nimport \"./AdminPanel.scss\"\n\n\ntype Props = {\n    dayIdx: number;\n    changeDay: () => void;\n    getPanelData: (group: number, semester: number, week: number, weekType: string) => void;\n}\n\nconst AdminPanel: React.FC<Props> = ({dayIdx, changeDay, getPanelData}) => {\n    const [panelLabel, setLabel] = React.useState(\"\")\n    const [groupInfo, setInfo] = React.useState({week: 0, group: 0, semester: 0, weekType: \"Чс\"})\n\n    const changeLabelInfo = React.useCallback((id, value) => {\n        const newInfo = groupInfo;\n        switch (id) {\n            case \"input-for-week\":\n                newInfo.week = value;\n                break;\n            case \"input-for-group\":\n                newInfo.group = value;\n                break;\n            case \"input-for-sem\":\n                newInfo.semester = value;\n                break;\n            case \"input-for-week-type\":\n                newInfo.weekType = value;\n                break;\n        }\n        /*if (newInfo.week !== 0 && !isNaN(newInfo.week) && newInfo.weekType !== \"\" && newInfo.semester !== 0\n            && !isNaN(newInfo.semester) && newInfo.group !== 0 && !isNaN(newInfo.group)) {\n            const newLabel = `${newInfo.week}-я Неделя, ${newInfo.weekType}, Группа ИУ10-${newInfo.semester}${newInfo.group}`\n            setLabel(newLabel)\n            getPanelData(newInfo.group, newInfo.semester, newInfo.week, newInfo.weekType)*/\n        if (newInfo.weekType !== \"\" && newInfo.semester !== 0\n            && !isNaN(newInfo.semester) && newInfo.group !== 0 && !isNaN(newInfo.group)) {\n            const newLabel = `Группа ИУ10-${newInfo.semester}${newInfo.group}, ${newInfo.weekType}`\n            setLabel(newLabel)\n            getPanelData(newInfo.group, newInfo.semester, newInfo.week, newInfo.weekType)\n        } else {\n            setLabel(\"\");\n        }\n        setInfo(newInfo);\n    }, [groupInfo, getPanelData])\n\n    return (\n        <div>\n            <div className=\"panel d-flex flex-column\">\n                <div className=\"panel__header\">\n                    Настройка параметров учебной группы\n                    <FontAwesomeIcon icon={faCogs} size={\"lg\"}\n                                     color={\"white\"}/>\n                </div>\n                <div className=\"panel__body\">\n                    {dayIdx !== -1 ?\n                        <ButtonTimetable\n                            onChange={changeDay}\n                            disabled={false}\n                            btn={{id: uuid(), color: \"#4fbfb4\"}}\n                        >\n                            <div className=\"d-flex flex-row flex-nowrap justify-content-around\">\n                                <FontAwesomeIcon icon={faPlus} size={\"lg\"}\n                                                 color={\"white\"}/>\n                                <span\n                                    className=\"DAndD-container__header__text_white\">{Week[dayIdx].day}</span>\n                            </div>\n                        </ButtonTimetable>\n                        : null}\n                    <div className=\"ml-1\">\n                        <InputNumber disabled placeholder=\"Неделя\" id=\"input-for-week\" min={1} max={17}\n                                     onChange={changeLabelInfo} defaultValue={NaN}/>\n                    </div>\n                    <InputNumber placeholder=\"Группа\" id=\"input-for-group\" min={1} max={5} onChange={changeLabelInfo}\n                                 defaultValue={NaN}/>\n                    <InputNumber placeholder=\"Семестр\" id=\"input-for-sem\" min={1} max={12} onChange={changeLabelInfo}\n                                 defaultValue={NaN}/>\n                    <div className=\"mr-1\">\n                        <select id=\"input-for-week-type\" defaultValue={\"1\"} className=\"panel__select\" onChange={(e) => {\n                            changeLabelInfo(\"input-for-week-type\", e.target.value)\n                        }}>\n                            <option value=\"Чс\">Чс</option>\n                            <option value=\"Зн\">Зн</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"panel__footer\">\n                    {panelLabel}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AdminPanel;","import React from \"react\";\nimport {buttonsContent} from \"@config/config\";\n\nimport \"./ButtonsLogo.scss\"\n\nconst classNames = require('classnames/bind');\n\nconst styles = {\n    btn: 'btn-logo',\n    btnXs: 'btn-logo__xs',\n};\n\nconst btnLogo = classNames.bind(styles);\n\ntype Props = {\n    idx: number;\n    xs?: boolean;\n}\n\nconst ButtonsLogo: React.FC<Props> = ({idx, xs}) => {\n    let className = btnLogo({\n        btn: true,\n        btnXs: !!xs\n    });\n\n    return (\n        <div className={className} style={{backgroundColor: buttonsContent[idx].color}}>\n            {buttonsContent[idx].title}\n        </div>\n    )\n}\n\nexport default React.memo(ButtonsLogo);","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faMapMarkerAlt} from \"@fortawesome/free-solid-svg-icons/faMapMarkerAlt\";\n\nimport ButtonsLogo from \"@components/ButtonsLogo/ButtonsLogo\";\n\ntype Props = {\n    isEmpty: boolean;\n    sourceIdx: number;\n    header: string;\n    footer: string;\n}\n\nconst DroppableElem: React.FC<Props> = ({sourceIdx, header, footer, isEmpty}) => {\n    return (\n        <div>\n            <div className=\"DAndD-item__header\">\n                <div className=\"DAndD-item__header__text\">{header}</div>\n            </div>\n            <div className=\"d-flex flex-row justify-content-between\">\n                <ButtonsLogo idx={sourceIdx}/>\n                {isEmpty ? null :\n                    <div className=\"DAndD-item__footer mt-1 mr-1\">\n                        <FontAwesomeIcon className=\"mr-1\" icon={faMapMarkerAlt}/>\n                        <span>{footer}</span>\n                    </div>}\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(DroppableElem);","import React from \"react\";\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars} from \"@fortawesome/free-solid-svg-icons/faBars\";\n\ntype Props = {\n    droppableColumn: Array<{ props: { btn: { id: string } } }>\n}\n\nconst DraggableArea: React.FC<Props> = ({droppableColumn}) => {\n    return (\n        <Droppable droppableId=\"items\" isDropDisabled={true}>\n            {(provided) => (\n                <div>\n                    <div className=\"DAndD-draggable\"  ref={provided.innerRef}>\n                        {\n                            droppableColumn.map((item, index) => {\n                                return (\n                                    <Draggable\n                                        key={item.props.btn.id}\n                                        draggableId={item.props.btn.id}\n                                        index={index}\n                                    >\n                                        {(provided, snapshot) => (\n                                            <React.Fragment>\n                                                <div ref={provided.innerRef}\n                                                     {...provided.draggableProps}\n                                                     {...provided.dragHandleProps}\n                                                >\n                                                    <div className=\"DAndD-items__column\" style={{\n                                                        border: snapshot.isDragging ?\n                                                            \"1px dashed #000\" : \"1px solid #ddd\"\n                                                    }}>\n                                                        <FontAwesomeIcon className=\"DAndD-items__column__drop ml-1\"\n                                                                         icon={faBars} size={\"lg\"}\n                                                                         style={{color: snapshot.isDragging ? \"#35b8b8\" : \"\"}}/>\n                                                        {item}\n                                                    </div>\n                                                </div>\n                                                {snapshot.isDragging && (\n                                                    <div className=\"DAndD-items__column__dragged\">\n                                                        <div style={{opacity: \"0\"}}>\n                                                            {item}\n                                                        </div>\n                                                    </div>)\n                                                }\n                                            </React.Fragment>\n                                        )}\n                                    </Draggable>)\n                            })}\n                        {provided.placeholder}\n                    </div>\n                </div>\n            )}\n        </Droppable>\n    )\n}\n\nexport default DraggableArea;","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons/faTimes\";\nimport \"./IconPlus.scss\"\n\nconst IconPlus = () => (\n    <FontAwesomeIcon className=\"icon-remover\" icon={faTimes} size={\"sm\"}\n                     color={\"#e85050\"}/>\n)\n\nexport default React.memo(IconPlus);","import React from \"react\";\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faClock} from \"@fortawesome/free-solid-svg-icons/faClock\";\n\nimport {LessonsTime, Week} from \"@config/config\";\nimport IconPlus from \"@components/IconPlus/IconPlus\";\n\ntype Props = {\n    Lists: object;\n    removeList: (id: number) => void;\n    removeItem: (list: string, id: number) => void;\n}\n\nconst DroppableArea: React.FC<Props> = ({Lists, removeList, removeItem}) => {\n    return (\n        <div>\n            {Object.keys(Lists).map((list) => (\n                <Droppable key={list} droppableId={list}>\n                    {(provided, snapshot) => (\n                        <div className=\"DAndD-container\" ref={provided.innerRef}\n                             style={{border: snapshot.isDraggingOver ? \"3px dashed #000\" : \"3px solid #ddd\"}}>\n                            <div\n                                className=\"DAndD-container__header d-flex flex-row justify-content-between\">\n                                <span className=\"DAndD-container__header__text\">{Week[list].day}</span>\n                                <button type=\"button\"\n                                        className=\"link-button\"\n                                        onClick={() => {\n                                            removeList(parseInt(list))\n                                        }}\n                                        style={{display: Lists[list].length ? \"none\" : \"\"}}\n                                >\n                                    <IconPlus/>\n                                </button>\n                            </div>\n                            <div className=\"DAndD__content\">\n                                {Lists[list].length ? Lists[list].map((item: { id: string }, index: number) => (\n                                        <Draggable key={item.id} draggableId={item.id}\n                                                   index={index}>\n                                            {(provided, snapshot) => (\n                                                <div ref={provided.innerRef} {...provided.draggableProps}\n                                                     style={\n                                                         provided.draggableProps.style\n                                                     }>\n                                                    <div className=\"DAndD-item\"\n                                                         style={{border: snapshot.isDragging ? \"1px dashed #000\" : \"1px solid #ddd\"}} {...provided.dragHandleProps}>\n                                                        <button type=\"button\"\n                                                                className=\"link-button DAndD-item__close icon-red\"\n                                                                onClick={() => {\n                                                                    removeItem(list, index)\n                                                                }}>\n                                                            <IconPlus/>\n                                                        </button>\n                                                        {item}\n                                                        <div\n                                                            className=\"DAndD-item__lessons d-flex flex-row align-items-center\">\n                                                            <FontAwesomeIcon icon={faClock}/>\n                                                            <div className=\"ml-1\">{LessonsTime[index]}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            )}\n                                        </Draggable>)) :\n                                    <div className=\"text-center\">\n                                        <span className=\"text-black-50\">Drop items here</span>\n                                    </div>\n                                }\n                                {provided.placeholder}\n                            </div>\n                        </div>\n                    )}\n                </Droppable>\n            ))}\n        </div>\n    )\n}\n\nexport default DroppableArea;","import {Week} from \"@config/config\";\nimport {v4 as uuid} from \"uuid\";\nimport {makeDelete, makePost} from \"@utils/network\";\nimport {Urls} from \"@config/urls\";\n\nexport const Labels = {'sem': 0, 'lek': 1, 'lr': 2, 'dz': 3, 'rk': 4, 'cons': 5, 'exam': 6, 'free': 7}\nconst LabelsInt = {0: 'sem', 1: 'lek', 2: 'lr', 3: 'dz', 4: 'rk', 5: 'cons', 6: 'exam', 7: 'free'}\n\n\nexport const findNextDay = (Lists: object) => {\n    let idx = 0;\n    const isFull = !Week.some((item) => {\n        if (!Lists[item.id]) {\n            idx = item.id;\n            return true;\n        }\n        return false;\n    })\n    return isFull ? -1 : idx;\n}\n\nexport const reorder = (list: Array<object>, startIndex: number, endIndex: number) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\nexport const copy = (item: object, destination: Array<object>, droppableIndex: number) => {\n    const destClone = Array.from(destination);\n    destClone.splice(droppableIndex, 0, {...item, id: uuid()});\n\n    return destClone;\n};\n\nexport const checkFill = (header_text: string, footer_text: string): boolean => {\n    return header_text?.length >= 2 && footer_text?.length >= 2\n}\n\nexport const getDayDataFromList = (day: Array<{ id: string, props: any }>) => {\n    return day.map((lesson, index) => ({\n        lesson_order: index + 1,\n        lesson_id: lesson.id,\n        title: lesson.props.header,\n        auditorium: lesson.props.footer,\n        lesson_type: LabelsInt[lesson.props.sourceIdx]\n    }))\n}\n\nconst changeWeekType = (week_type: string) => {\n    return week_type === \"Чc\" ? \"numerator\" : \"denominator\";\n}\n\nconst postWeekData = (week: object, showLabel: (err: any) => void) => {\n    makePost(Urls.timetable.post(), week).then((resp) => {\n        console.log(resp)\n        if (resp.status !== 201) {\n            showLabel({content: \"Не удалось сохранить изменения!\", success: false})\n        } else {\n            showLabel({content: \"Успех!\", success: true})\n        }\n    }).catch(() => {\n        showLabel({content: \"Не удалось сохранить изменения!\", success: false})\n    })\n}\n\nexport const saveTimetable = (Lists: object, deleted: { lessons: Array<string> }, panelData: { group: number; semester: number; week: number; weekType: string },\n                              showLabel: any) => {\n    const week = {\n        group: `IU10-${panelData.semester}${panelData.group}`,\n        week_type: changeWeekType(panelData.weekType),\n        week_number: panelData.weekType === \"Чс\" ? 1 : 2,\n        days: <Array<object>>[]\n    }\n    const idx = Object.keys(Lists)\n    idx.forEach((i) => {\n        week.days.push(\n            {\n                day_order: parseInt(i) + 1,\n                lessons: getDayDataFromList(Lists[i])\n            }\n        )\n    });\n    showLabel({content: \"\", success: false});\n\n    console.log(week)\n\n\n    makeDelete(Urls.timetable.delete(), {lessons_ids: deleted.lessons}).then((response) => {\n        if (response.status === 200) {\n            postWeekData(week, showLabel)\n        } else {\n            showLabel({content: \"Ошибка при удалении записей!\", success: false})\n        }\n    }).catch((err) => {\n        if (err.response && err.response.status === 403) {\n            showLabel({content: \"Недостаточно прав для изменения!\", success: false})\n        } else {\n            showLabel({content: \"Ошибка при удалении записей!\", success: false})\n        }\n    })\n}\n","import React from \"react\";\nimport \"./Card.scss\";\n\ntype Props = {\n    id: number;\n    title: string;\n    currentDay: number;\n    items: Array<React.ReactNode>;\n}\n\nconst Card: React.FC<Props> = ({id, title, currentDay, items}) => {\n    return (\n        <div className=\"Home-Card\">\n            <h5 className=\"Home-Card__title\"\n                style={{backgroundColor: id < currentDay ? \"#b4bdbd\" : \"#5bc3c3\"}}>{title}</h5>\n            <div className=\"list-group Home-Card__list\">\n                {\n                    items?.length > 0 ?\n                    items.map((elem, index) => (\n                    <div key={index} className=\"list-group-item Home-Card-list__item\">{elem}</div>)\n                    ) : <div className=\"list_empty\">Нет расписания</div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faClock} from \"@fortawesome/free-solid-svg-icons/faClock\"\nimport {faMapMarkerAlt} from \"@fortawesome/free-solid-svg-icons/faMapMarkerAlt\"\n\nimport \"./Lesson.scss\";\n\ntype Props = {\n    title: string;\n    time: string,\n    auditorium: string,\n    isEmpty: boolean\n}\n\nconst Lesson: React.FC<Props> = ({title, time, auditorium, isEmpty, children}) => {\n    return (\n        <div className=\"Lesson\">\n            <div className=\"Lesson__header\">\n                <div className=\"Lesson__header__text\">\n                    {title}</div>\n            </div>\n            {children}\n            <div className=\"Lesson__param d-flex flex-row \">\n                {isEmpty ? null :\n                    <div className=\"d-flex flex-row align-items-center\">\n                        <FontAwesomeIcon icon={faMapMarkerAlt}/>\n                        <div className=\"ml-1\">{auditorium}</div>\n                    </div>}\n\n                <div className=\"d-flex justify-content-end w-100\">\n                    <div className=\"d-flex flex-row align-items-center\">\n                        <FontAwesomeIcon icon={faClock}/>\n                        <div className=\"ml-1\">{time}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Lesson;","import React from \"react\";\nimport { MDBPagination, MDBPageItem, MDBPageNav, MDBCol, MDBRow } from \"mdbreact\";\n\nconst Pagination = () => {\n    return (\n        <MDBRow>\n            <MDBCol>\n                <MDBPagination color=\"teal\" circle>\n                    <MDBPageItem disabled>\n                        <MDBPageNav className=\"page-link\">\n                            <span>First</span>\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem disabled>\n                        <MDBPageNav className=\"page-link\" aria-label=\"Previous\">\n                            <span aria-hidden=\"true\">&laquo;</span>\n                            <span className=\"sr-only\">Previous</span>\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem active>\n                        <MDBPageNav className=\"page-link\">\n                            1 <span className=\"sr-only\">(current)</span>\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem>\n                        <MDBPageNav className=\"page-link\">\n                            2\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem>\n                        <MDBPageNav className=\"page-link\">\n                            3\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem>\n                        <MDBPageNav className=\"page-link\">\n                            4\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem>\n                        <MDBPageNav className=\"page-link\">\n                            5\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem>\n                        <MDBPageNav className=\"page-link\">\n                            &raquo;\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem>\n                        <MDBPageNav className=\"page-link\">\n                            Last\n                        </MDBPageNav>\n                    </MDBPageItem>\n                </MDBPagination>\n            </MDBCol>\n        </MDBRow>\n    )\n}\n\nexport default Pagination;\n\n","import React from \"react\";\nimport {TAG_EDUCATIONAL, TAG_GENERAL, TAG_IMPORTANT} from \"@config/config\";\nimport \"./blogTag.scss\"\n\nconst BlogTag = () => {\n    return (\n        <div>\n            <button type=\"button\" className=\"btn-tag btn-tag-general\">#{TAG_GENERAL}</button>\n            <button type=\"button\" className=\"btn-tag btn-tag-important\">#{TAG_IMPORTANT}</button>\n            <button type=\"button\" className=\"btn-tag btn-tag-educational\">#{TAG_EDUCATIONAL}</button>\n        </div>\n    )\n}\n\nexport default BlogTag;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport IconPlus from \"@components/IconPlus\";\n\ntype Props = {\n    key: string | number,\n    text: string,\n    answers?: [],\n    commentAuthor?: string,\n    viewByAuthor?: boolean,\n    onDeleteClick?: () => void\n}\n\nconst CommentView: React.FC<Props> = ({key, text, answers, commentAuthor, viewByAuthor, onDeleteClick}) => (\n    <div className=\"post-comment\" key={key}>\n        <div className=\"card-header d-flex flex-row justify-content-between\">\n            <div>\n                <img className=\"post-comment-avatar\" src=\"/public/img/hamster.webp\"\n                     alt=\"img not loaded\"/>\n                <Link className=\"ml-3\" to=\"/profile\">Вася Пупкин</Link>\n            </div>\n            <span>\n                <p className=\"date-time grey-text\"> 25 января 2021 г. в 12:58</p>\n                {viewByAuthor ?\n                    <button type=\"button\"\n                            className=\"link-button\"\n                            onClick={onDeleteClick}\n                    >\n                        <IconPlus/>\n                    </button>\n                    : null}\n            </span>\n        </div>\n        <div className=\"card-body\">\n            <div>{text ? <p>{text}</p> :\n                <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n            }</div>\n        </div>\n    </div>\n)\n\nexport default CommentView;","import React, {useState} from \"react\";\nimport \"./StatusLabel.scss\"\n\ntype Props = {\n    info: { content: string, success: boolean };\n}\n\n\nconst StatusLabel: React.FC<Props> = ({info}) => {\n    const [shown, isShown] = useState(false);\n\n    React.useEffect(() => {\n        const timer = setTimeout(() => {\n            isShown(false);\n        }, 2000);\n        isShown(info.content !== \"\");\n        return () => clearTimeout(timer);\n    }, [info])\n\n\n    return (\n        <div className=\"StatusLabel\"\n             style={{backgroundColor: info.success ? \"rgba(23,127,19,0.7)\" : \"rgba(175, 37, 37, 0.9)\"}}>\n            {shown ? <div className=\"StatusLabel__content text-center\">\n                <div>{info.content}</div>\n            </div> : null}\n        </div>\n    )\n}\n\nexport default StatusLabel","import React, {useCallback, useEffect, useState} from \"react\";\nimport \"./ViewPost.scss\"\nimport BlogTag from \"@components/Blog/blogTag\";\nimport {Link} from \"react-router-dom\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport PostComment from \"@components/PostCommentView\";\nimport Hamster from \"@media/hamster.webp\"\nimport CommentView from \"@components/PostCommentView\";\nimport {Urls} from \"@config/urls\";\nimport {makeDelete, makeGet} from \"@utils/network\";\nimport HTMLReactParser from 'html-react-parser';\nimport StatusLabel from \"@components/StatusLabel\";\n\nlet answersExample = [\n    {text: \"first answer text\"},\n    {text: \"second answer text\"},\n    {text: \"third answer text\"},\n    {text: \"forth answer text\"},\n]\n\n\ntype Props = {\n    id: string | number;\n    data: {\n        post_id: 0,\n        title: \"\",\n        author_id: 0,\n        tag_type: \"\",\n        content: \"\",\n        created: \"\",\n        is_edited: false,\n        comments: false\n    }\n}\n\ntype Comment = {\n    commentId: string | number,\n    author: string,\n    authorAvatarPath?: string,\n    text: string,\n    date?: string\n}\n\nexport const PostView: React.FC<Props> = ({id, data}) => {\n    const [label, showLabel] = useState({content: \"\", success: false});\n    const commentsForm = [\"Комментарий\", \"Комментария\", \"Комментариев\"];\n    const history = useHistory();\n    const location = useLocation();\n    const [isOutputFull, changeOutputFull] = React.useState(false);\n    const [isLiked, changeLiked] = React.useState(false);\n    const [likesCnt, changeLikesCnt] = React.useState(0);\n    const [commentsCnt, changeCommentsCnt] = React.useState(0);\n    const [comments, changeComments] = React.useState<Array<Comment>>([]);\n    const [postData, changePostData] = React.useState({\n        post_id: 0,\n        title: \"\",\n        author_id: 0,\n        tag_type: \"\",\n        content: \"\",\n        created: \"\",\n        is_edited: false,\n        comments: false\n    });\n\n    useEffect(() => {\n        if (location.pathname.includes('/posts')) {\n            changeOutputFull(true);\n            let urlPath = location.pathname.split(\"/\");\n            const postId = parseInt(urlPath[urlPath.length - 1]);\n            makeGet(Urls.post.getById(postId)).then((resp) => {\n                if (resp.status === 200) {\n                    changePostData(resp.data);\n                    console.log(resp.data)\n                }\n            }).catch((err) => {\n                if (err && err.message === \"Network Error\") {\n                    showLabel({success: false, content: \"Не удается связаться с сервером.\"})\n                } else if (err.response) {\n                    if (err.response.status === 404) {\n                        showLabel({success: false, content: err.response.data})\n                        history.replace(\"/*\")\n                        return\n                    } else {\n                        showLabel({success: false, content: err.response.data})\n                    }\n                }\n            })\n        } else {\n            changePostData(data);\n        }\n    }, [])\n\n\n    const declOfNum = (n: number, text_forms: Array<string>) => {\n        n = Math.abs(n) % 100;\n        let n1 = n % 10;\n        if (n > 10 && n < 20) {\n            return text_forms[2];\n        }\n        if (n1 > 1 && n1 < 5) {\n            return text_forms[1];\n        }\n        if (n1 === 1) {\n            return text_forms[0];\n        }\n        return text_forms[2];\n    }\n\n    const commentsRedirectHandler = () => {\n        if (!isOutputFull) {\n            history.push(`/posts/${data.post_id}`)\n        }\n        document.getElementById(\"go-to-comments\")?.click()\n    }\n\n    const addComment = () => {\n        const oldComments = [...comments];\n\n        oldComments.push({authorAvatarPath: \"\", date: \"\", commentId: oldComments.length, text: \"aaaa\", author: \"Vasya\"})\n        changeComments(oldComments);\n    }\n\n    const deleteComment = (commentId: string | number) => {\n        const oldComments = [...comments];\n        const idx = oldComments.findIndex((c) => (c.commentId === commentId))\n        oldComments.splice(idx, 1);\n        changeComments(oldComments);\n    }\n\n    const deletePost = React.useCallback(() => {\n        makeDelete(Urls.post.delete(data.post_id), null).then((resp) => {\n            if (resp.status === 200) {\n                showLabel({success: true, content: \"Пост успешно удален.\"});\n            } else if (resp.status === 404) {\n                showLabel({success: false, content: \"Пост не найден.\"});\n            }\n            history.replace(Urls.feed.slugRoot)\n        }).catch((err) => {\n            if (err.status === 404) {\n                showLabel({success: false, content: \"Пост не найден.\"});\n            } else {\n                showLabel({success: false, content: err.content});\n            }\n        })\n    }, [])\n\n    return (\n        <div\n            className=\"container-fluid flex-column h-100 justify-content-center align-items-center col-md-10 col-xl-7\">\n            <StatusLabel info={label}/>\n            <div className=\"card\">\n                <div className=\"card-header d-flex flex-row justify-content-between\">\n                    {isOutputFull ?\n                        <p className=\"post-title\">{postData.title}</p>\n                        :\n                        <Link to={`/posts/${postData.post_id}`}><p className=\"post-title\">{postData.title}</p></Link>\n                    }\n\n                    <p className=\"date-time grey-text\">{postData.created}</p>\n                </div>\n                <div className=\"card-body\">\n                    <BlogTag/>\n                    <p>{postData.tag_type}</p>\n                    {HTMLReactParser(postData.content)}\n                    <button className=\"btn-post-social btn-post-like\"\n                            onClick={deletePost}><i className=\"fa fa-trash fa-lg\"/></button>\n                    <footer className=\"grey-text\">\n                        <hr/>\n                        <div className=\"d-flex flex-nowrap flex-row justify-content-between\">\n                            <div className=\"ml-0\">\n                                <img className=\"post-avatar-sm\" src=\"/public/img/hamster.webp\"\n                                     alt=\"img not loaded\"/>\n                                <Link to={Urls.user.getUser(1)}>\n                                    Сергей Козлачков\n                                </Link>\n                            </div>\n\n                            <div className=\"mr-3\">\n                                <a id=\"go-to-comments\" className=\"href-transparent\" href=\"#comments\"/>\n                                <button className=\"btn-post-social\" onClick={commentsRedirectHandler}>\n                                    <i className=\"fa fa-comments fa-lg post-icon-comment\"/></button>\n                                {'5 комментов'}\n                                <button className=\"btn-post-social btn-post-like\"\n                                        onClick={() => {\n                                            changeLiked(!isLiked);\n                                            changeLikesCnt(isLiked ? likesCnt - 1 : likesCnt + 1);\n                                        }}><i\n                                    className=\"fa fa-heart fa-lg post-icon-like\"\n                                    style={isLiked ? {color: \"#ff4a4a\"} : undefined}/></button>\n                                {likesCnt}\n                            </div>\n                        </div>\n                    </footer>\n                </div>\n            </div>\n\n            {isOutputFull ? <div>\n                <button className=\"btn btn-success btn-sm\" onClick={addComment}>comments+\n                </button>\n                <h1 className=\"m-3\">\n                    <span>{commentsCnt} </span>{declOfNum(commentsCnt, commentsForm)}\n                </h1>\n\n                <div data-spy=\"scroll\" data-offset=\"0\">\n                    <div id=\"comments\">\n                        {comments.map((comment) => (\n                            <CommentView key={comment.commentId} text={comment.text} viewByAuthor={true}\n                                         onDeleteClick={() => (deleteComment(comment.commentId))}/>\n                        ))}\n                    </div>\n                    {<div className=\"text-center\">\n                        <button className=\"btn-post-social btn-post-comment blue-color\"\n                                onClick={() => {\n                                    alert(1)\n                                }}>Показать следующие комментарии\n                        </button>\n                    </div>}\n                </div>\n            </div> : null}\n        </div>\n    )\n}\n\nexport default PostView;","import React, {Component, useState} from 'react';\nimport ViewPost from \"@components/ViewPost\";\nimport Pagination from \"@components/Pagination\";\nimport {makeGet} from \"@utils/network\";\nimport {Urls} from \"@config/urls\";\nimport PostView from \"@components/ViewPost\";\nimport StatusLabel from \"@components/StatusLabel\";\n\n\nconst PostsList = () => {\n    const [label, showLabel] = useState({content: \"\", success: false});\n    const [posts, changePosts] = React.useState<Array<React.ReactNode>>([])\n\n    React.useEffect(() => {\n        const oldPosts: Array<React.ReactNode> = [];\n\n        makeGet(Urls.post.getList(0, 0)).then((resp) => {\n            if (resp.status != 200) {\n                showLabel({content: \"Не удалось загрузить посты\", success: false})\n            } else if (resp.data !== null && resp.data.length > 0) {\n                let postsList = resp.data;\n                console.log(resp.data)\n                for (let i = 0; i < postsList.length; ++i) {\n                    oldPosts.push(<div className=\"m-3\" key={i}><PostView id={i} data={postsList[i]}/></div>)\n                }\n                changePosts(oldPosts);\n            }\n        }).catch((err) => {\n            showLabel({content: `Не удалось загрузить посты:${err}`, success: false})\n        })\n\n\n    }, [])\n\n    return (\n        <div>\n            <StatusLabel info={label}/>\n            <div className=\"container-fluid\">\n                {posts.length > 0 ? posts : <div className=\"d-flex flex-center\">Посты не найдены</div>}\n                <div className=\"d-flex flex-center\">\n                    <Pagination/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PostsList;","import React, {useEffect, useState} from \"react\";\n\nimport Card from \"@components/Card\";\nimport Lesson from \"@components/Lesson\";\nimport ButtonsLogo from \"@components/ButtonsLogo\";\n\nimport \"./Home.scss\"\nimport {makeGet} from \"@utils/network\";\nimport {Urls} from \"@config/urls\";\nimport {Labels} from \"@components/DragAndDrop/config\";\nimport {LessonsTime} from \"@config/config\";\nimport PostsList from \"../PostsList\";\n\nconst getWeekData = (): [number, string[], string] => {\n    const date = new Date();\n    const today = date.getDate();\n    const weekDay = (date.getDay() + 6) % 7;\n    const weekAgo = today - weekDay;\n\n    const monthIdx = date.getMonth();\n    const days = [\"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\", \"Вс\"];\n    const months = [\"января\", \"февраля\", \"март\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"]\n    const weekType = Math.floor(weekAgo / 7) % 2 === 0 ? \"Зн\" : \"Чс\"\n    return [weekDay, days.map((day, index) => (`${day}, ${weekAgo + index} ${months[monthIdx]}`)), weekType]\n}\n\ntype LessonType = {\n    lesson_id: string;\n    title: string;\n    lesson_type: string;\n    auditorium: string;\n}\n\nconst prepareLessons = (lessons: Array<LessonType>) => {\n    return lessons.map((lesson, index) => (\n        <Lesson title={lesson.title} auditorium={lesson.auditorium} time={LessonsTime[index]}\n                isEmpty={lesson.lesson_type === \"free\"}>\n            <ButtonsLogo xs idx={Labels[lesson.lesson_type]}/>\n        </Lesson>\n    ))\n};\n\nconst prepareWeek = (weekDays: Array<{ day_id: string, day_order: number, lessons: Array<LessonType> }>) => {\n    const newList: Array<Array<React.ReactNode>> = [];\n\n    weekDays.forEach((day, index) => {\n        if (day.lessons) {\n            newList[index] = prepareLessons(day.lessons)\n        } else {\n            newList[index] = []\n        }\n    })\n    return newList\n}\n\nexport const getWeekType = (week_type: string) => {\n    return week_type === \"Чс\" ? 1 : 2\n}\n\nconst Home = () => {\n    const [weekInfo, changeWeekInfo] = useState<{ weekDay: number, days: string[] }>({weekDay: 0, days: []})\n    const [orgInfo, changeOrgInfo] = useState({group: \"\", week_number: 0, week_type: \"Чс\"})\n    const [lessons, changeLessons] = useState<Array<Array<React.ReactNode>>>([])\n\n    useEffect(() => {\n\n        const [weekDay, weekData, weekType] = getWeekData();\n\n        changeWeekInfo({weekDay: weekDay, days: weekData});\n        const userGroup = localStorage.getItem(\"user_group\");\n        if (userGroup) {\n            makeGet(Urls.timetable.get(userGroup, getWeekType(weekType))).then((response) => {\n                console.log(\"Ответ сервера успешно получен!\");\n                const week = response.data.week;\n                const savedWeek = prepareWeek(week.days);\n                changeLessons(savedWeek);\n                changeOrgInfo({group: week.group, week_type: weekType, week_number: week.week_number});\n\n            }).catch((error) => {\n                console.log(error);\n                return;\n            });\n        }\n\n    }, [])\n\n    return (\n        <div>\n            <div className=\"d-flex flex-row justify-content-center align-items-center\">\n                {orgInfo.group !== \"\" ?\n                    <div\n                        className=\"timetable__title\">{`Информация о группе ${orgInfo.group}, ${orgInfo.week_type}`}</div> :\n                    <div className=\"timetable__title\">Вы не прикреплены ни к одной из учебных групп</div>\n                }\n            </div>\n            {orgInfo.group !== \"\" ?\n                <div className=\"Home d-flex flex-row flex-nowrap\">\n                    {weekInfo.days.map((date, index) => (\n                        <Card id={index} key={index} currentDay={weekInfo.weekDay} title={date} items={lessons[index]}/>\n                    ))}\n                </div> : null\n            }\n            <PostsList/>\n        </div>\n    )\n}\n\nexport default React.memo(Home);","import React, {useEffect, useState} from \"react\";\nimport {v4 as uuid} from \"uuid\";\nimport {DragDropContext, DropResult} from \"react-beautiful-dnd\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faSave} from \"@fortawesome/free-solid-svg-icons/faSave\";\n\nimport ButtonTimetable from \"@components/ButtonTimetable\";\nimport ButtonWithInput from \"@components/ButtonWithInput\";\nimport AdminPanel from \"@components/AdminPanel\";\n\nimport {buttonsContent, Week} from \"@config/config\";\nimport DroppableElem from \"@components/DragAndDrop/DroppableElem\";\nimport DraggableArea from \"@components/DragAndDrop/DraggableArea\";\nimport DroppableArea from \"@components/DragAndDrop/DroppableArea\";\nimport {findNextDay, copy, reorder, checkFill, saveTimetable, Labels} from \"@components/DragAndDrop/config\";\n\nimport \"./DAndD.scss\"\nimport {makeGet} from \"@utils/network\";\nimport {Urls} from \"@config/urls\";\nimport {getWeekType} from \"../../pages/Home/Home\";\nimport StatusLabel from \"@components/StatusLabel\";\n\ntype Lesson = {\n    lesson_id: string;\n    title: string;\n    lesson_type: string;\n    auditorium: string;\n}\n\nconst prepareLessons = (lessons: Array<Lesson>) => {\n    return lessons.map((lesson) => ({\n        id: lesson.lesson_id, ...<DroppableElem isEmpty={lesson.lesson_type === \"free\"}\n                                                sourceIdx={Labels[lesson.lesson_type]}\n                                                header={lesson.title}\n                                                footer={lesson.auditorium}/>\n    }))\n}\n\n\nconst prepareWeek = (weekDays: Array<{ day_id: string, day_order: number, lessons: Array<Lesson> }>) => {\n    const newList = {};\n\n    weekDays.forEach((day, index) => {\n        if (day.lessons) {\n            newList[index] = prepareLessons(day.lessons)\n        }\n    })\n    return newList\n}\n\n\nconst DragAndDrop = () => {\n    const [err, showLabel] = useState({content: \"\", success: false});\n    const [deleted, changeDeleted] = useState<{ lessons: Array<string> }>({lessons: []});\n    const [Lists, changeList] = useState<object>({0: []});\n    const [dayIdx, changeDayIdx] = useState<number>(1);\n    const [areasValue, setAreasValues] = useState({});\n    const [inputsValue, setValues] = useState({});\n    const [panelData, setPanelData] = useState({group: 0, semester: 0, week: 0, weekType: \"\"});\n\n    useEffect(() => {\n        if (panelData.semester !== 0) {\n            showLabel({content:\"\", success: false})\n            makeGet(Urls.timetable.get(`IU10-${panelData.semester}${panelData.group}`, getWeekType(panelData.weekType))).then((response) => {\n                const savedWeek = prepareWeek(response.data.week.days);\n                changeList(savedWeek);\n                changeDayIdx(findNextDay(savedWeek));\n            }).catch((error) => {\n                showLabel({content:\"Указанная группа не найдена\", success: false})\n                changeList({0: []});\n                return;\n            });\n        }\n    }, [panelData])\n\n    const changeArea = React.useCallback((id: string, value: string) => {\n        const oldAreas = areasValue;\n        oldAreas[id] = value;\n        setAreasValues(oldAreas);\n    }, [areasValue]);\n\n    const changeInput = React.useCallback((id: string, value: string) => {\n        const oldInputs = inputsValue;\n        oldInputs[id] = value;\n        setValues(oldInputs);\n    }, [inputsValue]);\n\n    const droppableColumn = React.useMemo(() => (buttonsContent.map((btn, idx) => (\n        <ButtonWithInput key={idx} btn={btn} onAreaChange={changeArea} onInputChange={changeInput}\n                         inputs={{maxInputLength: 5, maxAreaLength: 50}}/>\n    ))), [changeInput, changeArea])\n\n    const onDragEnd = React.useCallback((result: DropResult) => {\n        const {source, destination} = result;\n\n        if (!destination) {\n            return;\n        }\n        const newList = {...Lists};\n\n        switch (source.droppableId) {\n            case destination.droppableId:\n                if (destination.droppableId === \"items\") {\n                    return;\n                }\n                newList[destination.droppableId] = reorder(\n                    Lists[source.droppableId],\n                    source.index,\n                    destination.index\n                )\n                break;\n            case \"items\":\n                if (Lists[destination.droppableId].length === Week.length) {\n                    return;\n                }\n                const title = areasValue[buttonsContent[source.index].id];\n                const auditorium = inputsValue[buttonsContent[source.index].id];\n                const isEmpty = buttonsContent[source.index].title === \"СР\";\n\n                if (!isEmpty && !checkFill(title, auditorium)) {\n                    return;\n                }\n\n                const draggable = <DroppableElem isEmpty={isEmpty} sourceIdx={source.index}\n                                                 header={isEmpty ? \"Самостоятельная работа\" : title}\n                                                 footer={auditorium}/>\n\n                newList[destination.droppableId] = copy(\n                    draggable,\n                    newList[destination.droppableId],\n                    destination.index\n                )\n                break;\n        }\n        changeList(newList);\n        console.log(Lists)\n    }, [Lists, areasValue, inputsValue]);\n\n    const AddList = React.useCallback(() => {\n        const idx = findNextDay(Lists)\n        if (idx === -1) {\n            return;\n        }\n        const newList = {...Lists};\n        newList[idx] = [];\n        changeList(newList);\n        changeDayIdx(findNextDay(newList));\n    }, [Lists]);\n\n    const removeItem = React.useCallback((list: string, index: number) => {\n        const newList = {...Lists};\n        const id: string = newList[list][index].id\n        const deletedLessons: Array<string> = [...deleted.lessons]\n        deletedLessons.push(id)\n        changeDeleted({lessons: deletedLessons});\n        newList[list].splice(index, 1);\n        changeList(newList);\n    }, [Lists, deleted.lessons]);\n\n    const removeList = React.useCallback((list: number) => {\n        const newList = {...Lists};\n        delete newList[list];\n        changeList(newList);\n        const idx = findNextDay(newList);\n        changeDayIdx(idx);\n    }, [Lists]);\n\n    const getPanelDataHandler = React.useCallback((group: number, semester: number, week: number, weekType: string) => {\n        setPanelData({group: group, semester: semester, week: week, weekType: weekType})\n    }, [])\n\n    return (\n        <div className=\"DAndD text-center\">\n            <StatusLabel info={err}/>\n            <div className=\"d-flex flex-row\">\n                <div className=\"d-none d-sm-block col-sm-4 col-md-5\"/>\n                <div className=\"col-md-7\">\n                    <AdminPanel dayIdx={dayIdx} changeDay={AddList} getPanelData={getPanelDataHandler}/>\n                </div>\n            </div>\n            <hr/>\n            <div className=\"d-flex flex-row\">\n                <DragDropContext onDragEnd={onDragEnd}>\n                    <div className=\"col-5\">\n                        <DroppableArea Lists={Lists} removeList={removeList} removeItem={removeItem}/>\n                    </div>\n                    <div className=\"col-7 d-flex\">\n                        <DraggableArea droppableColumn={droppableColumn}/>\n                    </div>\n                </DragDropContext>\n            </div>\n            <hr/>\n            <div>\n                <ButtonTimetable\n                    onChange={() => {\n                        saveTimetable(Lists, deleted, panelData, showLabel)\n                        //history.replace(Urls.timetable.byId)\n                    }}\n                    btn={{id: uuid(), color: \"#36a51c\"}}\n                >\n                    <div className=\"d-flex flex-row align-items-center justify-content-around\">\n                        <FontAwesomeIcon icon={faSave} size={\"sm\"}/>\n                        <div>Save</div>\n                    </div>\n                </ButtonTimetable>\n            </div>\n\n        </div>\n    );\n}\n\nexport default DragAndDrop;\n","import React from \"react\";\n\nimport DragAndDrop from \"@components/DragAndDrop\";\nimport \"./timetable.scss\"\n\n\n\nconst Timetable = () => {\n    return (\n       <div>\n           <DragAndDrop/>\n       </div>\n    )\n\n}\n\nexport default React.memo(Timetable);\n","import React from \"react\";\nimport {useHistory} from \"react-router-dom\";\n\nimport {Urls} from \"@config/urls\";\n\nimport \"./NotFound.scss\"\n\nconst NotFoundPage = () => {\n    const history = useHistory()\n\n    const homeRedirectHandler = React.useCallback(() => {\n        history.replace(Urls.timetable.slugRoot)\n    }, [history]);\n\n    return (\n        <div className=\"notFound\">\n            <div className=\"overlay\"/>\n            <div className=\"terminal\">\n                <h1>Error <span className=\"errCode\">404</span></h1>\n                <p className=\"output\">The page you are looking for might have been removed, had its name changed or is\n                    temporarily unavailable.</p>\n                <p className=\"output\">Please try to\n                    <button type=\"button\"\n                            className=\"link-button notFound__back\"\n                            onClick={history.goBack}>\n                        go back</button> or\n                    <button type=\"button\"\n                            className=\"link-button notFound__back\"\n                            onClick={homeRedirectHandler}>\n                        return to the homepage</button>.\n                </p>\n                <p className=\"output\">Good luck.</p>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(NotFoundPage);","import React from \"react\";\n\nimport \"./AutoInput.scss\"\n\ntype Props = {\n    id: string;\n    list: Array<string>;\n    className: string;\n    inputProps: any;\n    //autoCompete: boolean,\n}\nconst AutoInput: React.FC<Props> = ({id, className, list,inputProps}) => {\n    React.useEffect(() => {\n        const dataList = document.createElement(\"datalist\");\n        const input = document.getElementById(id);\n        dataList.setAttribute('id', `datalist-${id}`);\n        list.forEach((option) => {\n            const dataListOption = document.createElement(\"option\");\n            dataListOption.value = option;\n            dataList.appendChild(dataListOption);\n        });\n        input?.appendChild(dataList);\n    }, [id, list])\n\n    return (\n        <input className={className} id={id} type=\"text\"\n               list={`datalist-${id}`}\n               {...inputProps}\n        />\n    )\n}\n\nexport default AutoInput;","const MaxDisciplineLength = 25;\nconst MinDisciplineLength = 3;\nconst ERROR_TAG_FIELD = `Длина дисциплины должна быть от ${MinDisciplineLength} до ${MaxDisciplineLength} символов.`;\nconst ERROR_TAG_DUPLICATE = `Введенная дисциплина уже закреплена за преподавателем.`\n\nexport const isTagValid = (tags: Array<{ id: string, content: string }>, tagInfo: { content: string, noFocus: boolean, errMsg: string }) => {\n    const length = tagInfo.content.length;\n\n    tagInfo.errMsg = length < MinDisciplineLength || length > MaxDisciplineLength ? ERROR_TAG_FIELD : \"\";\n    tags.forEach((tag) => {\n        if (tag.content === tagInfo.content) {\n            tagInfo.errMsg = ERROR_TAG_DUPLICATE;\n            return;\n        }\n    })\n    return tagInfo.errMsg;\n}","import React, {useState} from \"react\";\nimport \"./Tags.scss\"\nimport IconPlus from \"@components/IconPlus\";\nimport StatusLabel from \"@components/StatusLabel\";\nimport AuthError from \"@components/AuthError/AuthError\";\nimport AutoInput from \"@components/AutoCompleteInput\";\nimport {isTagValid} from \"@components/Tags/config\";\nimport {v4 as uuid} from \"uuid\";\n\ntype Props = {\n    placeholder?: string;\n    tags: Array<{ id: string, content: string }>;\n    selectList: Array<string>;\n    changeTags: (tagsOld: Array<{ id: string, content: string }>) => void;\n}\n\nconst Tags: React.FC<Props> = ({tags, changeTags, placeholder, selectList}) => {\n    const [tagInput, setTagInp] = React.useState({content: \"\", noFocus: true, errMsg: \"\"})\n    const [label, showLabel] = useState({content: \"\", success: false});\n\n    const handleInput = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        const tagInfo = {...tagInput};\n        tagInfo.content = e.target.value;\n        tagInfo.errMsg = isTagValid(tags, tagInfo);\n        tagInfo.noFocus = false;\n        setTagInp(tagInfo);\n    }, [tagInput, tags]);\n\n    const handleBlur = React.useCallback(() => {\n        const tagInfo = {...tagInput};\n\n        if (tags.length > 0 && tagInfo.content === \"\") {\n            tagInfo.errMsg = \"\";\n        }\n        tagInfo.noFocus = true;\n        setTagInp(tagInfo);\n    }, [tagInput, tags]);\n\n    const handleDelete = React.useCallback((id: string | number) => {\n        const tagsOld = [...tags];\n        const tagId = tagsOld.findIndex((obj) => (obj.id === id))\n        tagsOld.splice(tagId, 1);\n        changeTags(tagsOld);\n    }, [changeTags, tags]);\n\n\n    const addTag = React.useCallback(() => {\n        const tagsOld = [...tags];\n        const tagOld = {...tagInput};\n        const id = `tag-${uuid()}`;\n\n        if (tagInput.content === '') {\n            showLabel({content: 'Введите дисциплину!', success: false})\n            return;\n        }\n        if (tagInput.errMsg !== \"\") {\n            return;\n        }\n        tagsOld.push({id: id, content: tagInput.content})\n        changeTags(tagsOld)\n        tagOld.content = \"\";\n        setTagInp(tagOld);\n    }, [tags, tagInput, changeTags])\n\n    return (\n        <div>\n            <StatusLabel info={label}/>\n            <div className=\"mb-2\">{tags.map((tag) => (\n                <div className=\"tag\" key={tag.id}>\n                    <div className=\"tag-block\">\n                        {tag.content}\n                    </div>\n                    <button className=\"btn-delete\" onClick={() => handleDelete(tag.id)}><IconPlus/></button>\n                </div>\n            ))}</div>\n            {(tagInput.noFocus && tagInput.errMsg) &&\n            <AuthError msg={tagInput.errMsg}/>}\n            <div className=\"d-flex flex-row align-items-center\">\n                <AutoInput id=\"input-auto_tag\" className=\"users-control_input\"\n                           list={selectList}\n                           inputProps={{\n                               value: tagInput.content,\n                               onChange: handleInput,\n                               onBlur: handleBlur,\n                               placeholder: placeholder\n                           }}\n                />\n                <button type=\"button\" onClick={addTag} className=\"tag-btn ml-1\">+</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Tags;","import generatePassword from \"password-generator\";\n\nexport const MIN_SNP = 2;\nexport const MAX_SNP = 20;\nexport const MAX_ABOUT = 256;\nexport const ERROR_NAME_FIELD = `Длина имени от ${MIN_SNP} до ${MAX_SNP} символов, допускаются только русские буквы.`;\nexport const ERROR_SURNAME_FIELD = `Длина фамилии от ${MIN_SNP}  до ${MAX_SNP} символов, допускаются только русские буквы.`;\nexport const ERROR_PATRONYMIC_FIELD = `Длина отчества от ${MIN_SNP}  до ${MAX_SNP} символов, допускаются только русские буквы.`;\nexport const ERROR_PHONE_FIELD = \"Неверный номер телефона.\";\nexport const ERROR_EMAIL_FIELD = \"Неверный email.\";\nexport const ERROR_ABOUT_FIELD = `Максимальная длина описания ${MAX_ABOUT} символов.`;\n\n\nexport const btnPasswd =\n    {\n        id: \"btn-passwd-generator\",\n        title: \"+\",\n        color: \"#4db6ac\",\n        genPasswd: (len: number) => (generatePassword(len, false, /[\\w\\d?-]/))\n    }\n\nexport const saveUser = (userInfo: object, showLabel: any) => {\n    showLabel({content: \"a\", success: false});\n}\n\nexport const checkRussian = (str: string): boolean => {\n    return /^[а-яА-ЯЁё]+$/.test(str);\n}\n\nexport const isValid = (userValid: {}): boolean => {\n    let isFormValid = true;\n    Object.keys(userValid).forEach((key) => {\n        if (userValid[key].msg !== \"\") {\n            isFormValid = false;\n            return false;\n        }\n    })\n    return isFormValid;\n}\n\nexport const notEmpty = (user: {}, canBeEmpty?: Array<string>): boolean => {\n    let noEmptyFields = true;\n    Object.keys(user).forEach((key) => {\n        const field = user[key].toString();\n        if (field === \"\" || field === \"NaN\") {\n            if (canBeEmpty?.includes(key)) {\n            } else {\n                console.log(key)\n                noEmptyFields = false;\n                return false;\n            }\n\n        }\n    })\n    return noEmptyFields;\n}","import React, {useEffect, useState} from 'react';\nimport {MDBDataTable} from 'mdbreact';\n\nimport StatusLabel from \"@components/StatusLabel\";\nimport {makeGet} from \"@utils/network\";\n\nimport \"./userTables.scss\"\nimport {USER_TYPE_PROFESSOR, USER_TYPE_STUDENT} from \"../../Authorization/config\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faRedoAlt} from \"@fortawesome/free-solid-svg-icons/faRedoAlt\";\n\ntype PropsData = {\n    columns: {\n        label?: string;\n        field?: string;\n        sort?: string;\n        width?: number;\n        searchable?: boolean;\n        [rest: string]: any;\n    }[];\n    rows: {\n        clickEvent: () => void;\n        [rest: string]: any;\n    }[];\n}\n\ntype resp = {\n    [rest: string]: any;\n}\n\n\ntype Props = {\n    url: string,\n    id: number,\n    title: string,\n    userType: string,\n    rowClickEvent: (user: resp) => void,\n};\n\nconst UsersTable: React.FC<Props> = ({title, url, userType, rowClickEvent}) => {\n    const [err, showLabel] = useState({content: \"\", success: false});\n    const [needDownload, setDownload] = useState(false);\n    const [timerRedo, setTimerRedo] = useState(-1);\n    const [isReady, setReady] = useState(true);\n    const [data, setData] = useState<PropsData>({columns: [], rows: []});\n\n    const handleClick = React.useCallback(() => {\n        setDownload(true);\n    }, []);\n\n\n    useEffect(() => {\n        if (needDownload && timerRedo !== 0) {\n            setReady(false);\n            const timer = setTimeout(() => {\n                makeGet(url).then((response) => {\n                    if (response && response.data && response.data.users) {\n                        setData(responseConverter(response.data.users, userType));\n                    } else {\n                        showLabel({content: \"Ничего не найдено\", success: false});\n                    }\n                }).catch((error) => {\n                    showLabel({content: \"Ошибка сервера. Попробуйте позже\", success: false});\n                }).finally(() => setReady(true))\n            }, 500);\n            return () => clearTimeout(timer);\n        }\n    }, [needDownload, url, userType, timerRedo]);\n\n    const responseConverter = (data: Array<resp>, userType: string) => {\n        const tableDataTemplate = {\n            columns: [\n                {\n                    label: 'Фамилия',\n                    field: 'surname',\n                    sort: 'asc',\n                },\n                {\n                    label: \"Имя\",\n                    field: 'name',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Отчество',\n                    field: 'patronymic',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Телефон',\n                    field: 'phone',\n                    sort: 'asc',\n                },\n            ],\n            rows: data.map((user) => ({\n                name: user.name,\n                surname: user.surname,\n                patronymic: user.patronymic,\n                email: user.email,\n                phone: user.phone,\n                group: user.student_group,\n                disciplines: user.prof_disciplines_str.substring(1, user.prof_disciplines_str.length - 1).split(\",\").join(\", \"),\n                about: user.about,\n                clickEvent: () => rowClickEvent(user)\n            }))\n        };\n\n        if (userType === USER_TYPE_STUDENT) {\n            tableDataTemplate.columns.push({\n                label: 'Учебная группа',\n                field: 'group',\n                sort: 'asc',\n            });\n        } else if (userType === USER_TYPE_PROFESSOR) {\n            tableDataTemplate.columns.push({\n                label: 'Дисциплины',\n                field: 'disciplines',\n                sort: 'asc',\n            }, {\n                label: 'Описание',\n                field: 'about',\n                sort: 'asc',\n            });\n        }\n        return tableDataTemplate;\n    }\n\n    const handleRedo = React.useCallback(() => {\n        console.log(timerRedo)\n        if (timerRedo > 0) {\n            return;\n        }\n        setTimerRedo(window.setTimeout(() => {\n            setTimerRedo(0);\n        }, 3000));\n\n    }, [timerRedo]);\n\n    return (\n        <div className=\"users-table\">\n            <StatusLabel info={err}/>\n            <div className=\"panel__header\">\n                <div>{title}</div>\n                {needDownload ?\n                    <button type=\"button\" onClick={handleRedo} disabled={timerRedo !== 0 && timerRedo !== -1}\n                            className=\"tag-btn users-table__redo ml-1\">\n                        <FontAwesomeIcon className=\"icon-reload\"\n                                         icon={faRedoAlt}\n                                         size={\"sm\"}\n                                         color={\"#ffffff\"}/>\n                    </button> : null}\n            </div>\n            <div className=\"users-table__body p-1\">\n                {!isReady ?\n                    <i className=\"fa fa-spinner fa-spin fa-2x fa-fw\"/> : null}\n                {isReady && needDownload ? <MDBDataTable\n                    className=\"users-table\"\n                    data={data}\n                    hover\n                    striped\n                    infoLabel={[\"Показано с\", \"по\", \"из\", \"записей\"]}\n                    paginationLabel={[\"Назад\", \"Вперед\"]}\n                    noRecordsFoundLabel=\"Ничего не найдено\"\n                    bordered\n                    responsive\n                    small>\n                </MDBDataTable> : null}\n                {!needDownload ?\n                    <button className=\"btn btn-link btn-download\" onClick={handleClick}>Загрузить данные</button> : null\n                }\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default UsersTable;\n","import React, {useCallback, useState} from \"react\";\nimport \"./UsersControl.scss\"\nimport InputNumber from \"@components/InputNumber\";\nimport Tags from \"@components/Tags\";\nimport StatusLabel from \"@components/StatusLabel\";\nimport {\n    btnPasswd, checkRussian, ERROR_ABOUT_FIELD,\n    ERROR_NAME_FIELD,\n    ERROR_PATRONYMIC_FIELD, ERROR_PHONE_FIELD,\n    ERROR_SURNAME_FIELD, isValid, MAX_ABOUT,\n    MAX_SNP,\n    MIN_SNP, notEmpty,\n} from \"./config\";\n\nimport {makeGet, makePost, makePut} from \"@utils/network\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faRedoAlt} from \"@fortawesome/free-solid-svg-icons/faRedoAlt\";\nimport UsersTable from \"./usersTables\";\nimport {Urls} from \"@config/urls\";\nimport AuthError from \"@components/AuthError/AuthError\";\nimport {ERROR_EMAIL_FIELD, USER_TYPE_METHODIST, USER_TYPE_PROFESSOR, USER_TYPE_STUDENT} from \"../Authorization/config\";\nimport {v4 as uuid} from \"uuid\";\n\ntype UserProps = {\n    id: string,\n    role: string,\n    email: string,\n    phone: string,\n    name: string,\n    surname: string,\n    patronymic: string,\n    password: string,\n    about: string,\n    disciplines: Array<{ id: string, content: string }>,\n    group: number,\n    sem: number\n}\n\nconst InitialUser = {\n    id: \"\",\n    role: USER_TYPE_STUDENT,\n    email: \"\",\n    phone: \"\",\n    name: \"\",\n    surname: \"\",\n    patronymic: \"\",\n    password: \"\",\n    about: \"\",\n    disciplines: [],\n    group: NaN,\n    sem: NaN\n};\n\nconst UsersControl = () => {\n    const [label, showLabel] = useState({content: \"\", success: false});\n    const [inputPasswd, setInputPasswd] = useState<HTMLInputElement | null>(null);\n    const [userInfo, setUserInfo] = useState<UserProps>(InitialUser);\n    const [timer, setTimer] = useState(0);\n    const [disciplines, setDisciplines] = useState<Array<{ discipline_id: number, discipline_content: string, prof_cnt: number }>>([]);\n    const [isDataForEdit, changeEditFlag] = useState({wasEdit: false, oldPhone: \"\", oldEmail: \"\"});\n    const [btnText, setBtnText] = useState(\"Сохранить\")\n\n    const [userValid, setUserValid] = useState({\n        role: {noFocus: false, msg: \"\"},\n        email: {noFocus: false, msg: \"\"},\n        phone: {noFocus: false, msg: \"\"},\n        name: {noFocus: false, msg: \"\"},\n        surname: {noFocus: false, msg: \"\"},\n        patronymic: {noFocus: false, msg: \"\"},\n        password: {noFocus: false, msg: \"\"},\n        about: {noFocus: false, msg: \"\"},\n    });\n\n    React.useEffect(() => {\n        const inputElem = document.getElementById(\"input-password\") as HTMLInputElement;\n\n        setInputPasswd(inputElem);\n        if (userInfo.role === USER_TYPE_PROFESSOR) {\n            makeGet(Urls.discipline.getAll()).then((resp) => {\n                if (resp.status === 200) {\n                    if (resp.data && resp.data.disciplines && resp.data.disciplines.length > 0) {\n                        setDisciplines(resp.data.disciplines)\n                    }\n                }\n            }).catch((err) => {\n                showLabel({content: \"Не удалось загрузить список дисциплин.\", success: false})\n            })\n        }\n    }, [userInfo.role])\n\n    const handleSubmit = useCallback(() => {\n        let fieldsCanBeEmpty = [\"about\", \"sem\", \"group\"];\n\n        if (!isValid(userValid)) {\n            showLabel({content: \"Заполните поля корректно.\", success: false});\n            return;\n        }\n\n        if (userInfo.role === USER_TYPE_METHODIST) {\n            fieldsCanBeEmpty.push(\"disciplines\");\n        } else if (userInfo.role === USER_TYPE_STUDENT) {\n            fieldsCanBeEmpty = [\"about\", \"disciplines\"];\n        }\n\n        if (isDataForEdit.wasEdit) {\n            fieldsCanBeEmpty.push(\"password\");\n        } else {\n            fieldsCanBeEmpty.push(\"id\");\n        }\n\n        console.log(userInfo)\n        if (!notEmpty(userInfo, fieldsCanBeEmpty)) {\n            showLabel({content: \"Заполните пустые поля.\", success: false});\n            return;\n        }\n\n        const newUser = {\n            id: userInfo.id,\n            role: userInfo.role.trim(),\n            password: userInfo.password,\n            name: userInfo.name.trim(),\n            surname: userInfo.surname.trim(),\n            patronymic: userInfo.patronymic.trim(),\n            email: userInfo.email.trim(),\n            phone: userInfo.phone.trim(),\n            student_group: userInfo.role === USER_TYPE_STUDENT ? `${userInfo.sem}${userInfo.group}` : \"\",\n            prof_disciplines: userInfo.disciplines.map((dis) => (dis.content)),\n        }\n\n        console.log(userInfo.id)\n\n        if (isDataForEdit.wasEdit) {\n            makePut(Urls.user.postCreate(), newUser).then((resp) => {\n                if (resp.status === 201) {\n                    showLabel({content: \"Успех!\", success: true});\n                    setUserInfo(InitialUser);\n                    changeEditFlag({wasEdit: false, oldEmail: \"\", oldPhone: \"\"});\n                    setBtnText(\"Сохранить\")\n                }\n            }).catch((err) => {\n                if (err && err.response && err.response.status === 409) {\n                    showLabel({\n                        content: \"Пользователь с данным email или телефоном уже зарегистрирован.\",\n                        success: false\n                    });\n                } else {\n                    showLabel({content: \"Ошибка сервера. Попробуйте позже.\", success: false});\n                }\n            });\n        } else {\n            makePost(Urls.user.postCreate(), newUser).then((resp) => {\n                if (resp.status === 201) {\n                    showLabel({content: \"Успех!\", success: true});\n                    setUserInfo(InitialUser);\n                    changeEditFlag({wasEdit: false, oldEmail: \"\", oldPhone: \"\"});\n                    setBtnText(\"Сохранить\")\n                }\n            }).catch((err) => {\n                if (err && err.response && err.response.status === 409) {\n                    showLabel({\n                        content: \"Пользователь с данным email или телефоном уже зарегистрирован.\",\n                        success: false\n                    });\n                } else {\n                    showLabel({content: \"Ошибка сервера. Попробуйте позже.\", success: false});\n                }\n            });\n        }\n\n\n    }, [userValid, userInfo, isDataForEdit]);\n\n\n    const handlePassword = useCallback(() => {\n        const oldUser = {...userInfo};\n\n        if (inputPasswd) {\n            if (timer !== 0) {\n                clearTimeout(timer);\n            }\n            setTimer(window.setTimeout(() => {\n                inputPasswd.type = \"password\";\n                clearTimeout(timer);\n            }, 3000));\n            inputPasswd.type = \"text\";\n        }\n        oldUser.password = btnPasswd.genPasswd(15);\n        setUserInfo(oldUser);\n    }, [inputPasswd, timer, userInfo]);\n\n    const handleBlur = useCallback(() => {\n        const oldUserValid = {...userValid};\n\n        Object.keys(oldUserValid).forEach((key) => {\n            oldUserValid[key].noFocus = true;\n            if (userInfo[key] === \"\") {\n                oldUserValid[key].msg = \"\";\n            }\n        });\n\n        setUserValid(oldUserValid);\n    }, [userInfo, userValid]);\n\n\n    const handleUserInfo = useCallback((e: React.ChangeEvent<HTMLSelectElement> | React.ChangeEvent<HTMLInputElement>) => {\n        const oldUser = {...userInfo};\n        const oldUserValid = {...userValid};\n        const value = e.target.value;\n        const length = value.length;\n\n        if (isDataForEdit.wasEdit) {\n            setBtnText(\"Редактировать\");\n        } else {\n            setBtnText(\"Сохранить\");\n        }\n\n        switch (e.target.id) {\n            case \"input-name\":\n                oldUserValid.name.msg = length < MIN_SNP || length >= MAX_SNP || !checkRussian(value) ? ERROR_NAME_FIELD : \"\"\n                oldUserValid.name.noFocus = false;\n                oldUser.name = value;\n                break;\n            case \"input-surname\":\n                oldUserValid.surname.msg = length < MIN_SNP || length >= MAX_SNP || !checkRussian(value) ? ERROR_SURNAME_FIELD : \"\"\n                oldUserValid.surname.noFocus = false;\n                oldUser.surname = value;\n                break;\n            case \"input-patronymic\":\n                oldUserValid.patronymic.msg = length < MIN_SNP || length >= MAX_SNP || !checkRussian(value) ? ERROR_PATRONYMIC_FIELD : \"\"\n                oldUserValid.patronymic.noFocus = false;\n                oldUser.patronymic = value;\n                break;\n            case \"input-password\":\n                oldUserValid.patronymic.msg = length < MIN_SNP || length >= MAX_SNP ? ERROR_PATRONYMIC_FIELD : \"\"\n                oldUserValid.patronymic.noFocus = false;\n                oldUser.password = value;\n                break;\n            case \"select-usertype\":\n                oldUser.role = value;\n                break;\n            case \"input-email\":\n                const reEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                oldUserValid.email.msg = !reEmail.test(String(value).toLowerCase()) ? ERROR_EMAIL_FIELD : \"\";\n                oldUserValid.email.noFocus = false;\n                oldUser.email = value;\n                if (value === isDataForEdit.oldEmail) {\n                    setBtnText(\"Редактировать\");\n                } else {\n                    changeEditFlag({wasEdit: false, oldEmail: oldUser.email, oldPhone: isDataForEdit.oldPhone});\n                    setBtnText(\"Сохранить\");\n                }\n                break;\n            case \"input-phone\":\n                const rePhone = /^[\\d]{1} \\([\\d]{2,3}\\) [\\d]{2,3}-[\\d]{2,3}-[\\d]{2,3}$/;\n                oldUserValid.phone.msg = !rePhone.test(String(value).toLowerCase()) ? ERROR_PHONE_FIELD : \"\";\n                oldUserValid.phone.noFocus = false;\n\n                let telephone = \"\";\n                let numbersOld = oldUser.phone.replace(/\\D/g, \"\").split('');\n                const numbersNew = value.replace(/\\D/g, \"\").split('');\n\n                if (numbersOld.length === numbersNew.length && telephone.length < value.length) {\n                    telephone = value;\n                } else {\n                    for (let i = 0; i < 11 && i < numbersNew.length; ++i) {\n                        if (i === 4) {\n                            telephone += \") \";\n                        } else if (i === 7 || i === 9) {\n                            telephone += \"-\";\n                        }\n                        telephone += numbersNew[i];\n                        if (i === 0) {\n                            telephone += \" (\";\n                        }\n                    }\n                }\n\n                oldUser.phone = telephone.trim();\n                if (oldUser.phone === isDataForEdit.oldPhone) {\n                    setBtnText(\"Редактировать\");\n                } else {\n                    changeEditFlag({wasEdit: false, oldEmail: isDataForEdit.oldEmail, oldPhone: oldUser.phone});\n                    setBtnText(\"Сохранить\");\n                }\n                break;\n            case \"input-about\":\n                oldUserValid.about.msg = length > MAX_ABOUT ? ERROR_ABOUT_FIELD + ` (${length})` : \"\";\n                oldUserValid.about.noFocus = false;\n                oldUser.about = value;\n                break;\n        }\n        setUserInfo(oldUser);\n        setUserValid(oldUserValid);\n    }, [isDataForEdit, userInfo, userValid]);\n\n    const handleInputId = useCallback((id: string, value: number) => {\n        const oldUser = {...userInfo};\n\n        if (id === \"input_nmb_sem\") {\n            oldUser.sem = value;\n        } else {\n            oldUser.group = value;\n        }\n        setUserInfo(oldUser);\n    }, [userInfo]);\n\n    const handleUserEdit = React.useCallback((user: any) => {\n        let sem = NaN;\n        let group = NaN;\n        //console.log(user.student_group)\n        if (user.student_group.length === 3) {\n            sem = user.student_group.slice(0, 2);\n            group = user.student_group[2];\n        } else if (user.student_group.length === 2) {\n            sem = user.student_group[0];\n            group = user.student_group[1];\n        }\n\n        const prepareUser = {\n            id: user.id,\n            role: user.role,\n            email: user.email,\n            phone: user.phone,\n            name: user.name,\n            surname: user.surname,\n            patronymic: user.patronymic,\n            password: \"\",\n            about: user.about,\n            disciplines: user.prof_disciplines_str.substring(1, user.prof_disciplines_str.length - 1).split(\",\").map((d: string) => ({\n                id: `tag-${uuid()}`,\n                content: d\n            })),\n            group: group,\n            sem: sem\n        }\n\n        changeEditFlag({wasEdit: true, oldEmail: user.email, oldPhone: user.phone});\n        setBtnText(\"Редактировать\");\n        setUserInfo(prepareUser);\n    }, []);\n\n    const defineRole = () => {\n        if (userInfo.role === USER_TYPE_STUDENT) {\n            return (\n                <div>\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"mr-1\">\n                            <InputNumber placeholder={\"Сем\"} onChange={handleInputId} id={\"input_nmb_sem\"} min={1}\n                                         max={12} defaultValue={userInfo.sem}/>\n                        </div>\n                        <div className=\"ml-1\">\n                            <InputNumber placeholder={\"Группа\"} onChange={handleInputId} id={\"input_nmb_group\"} min={1}\n                                         max={5} defaultValue={userInfo.group}/>\n                        </div>\n                    </div>\n                    {!isNaN(userInfo.sem) && !isNaN(userInfo.group) ?\n                        <div className=\"IU\">{`Группа: ИУ10-${userInfo.sem}${userInfo.group}`}</div> : null}\n                </div>\n            )\n        } else if (userInfo.role === USER_TYPE_PROFESSOR) {\n            return (\n                <div>\n                    <div className=\"users-control_label\">Дисциплина</div>\n                    <Tags tags={userInfo.disciplines}\n                          selectList={disciplines.map(d => (d.discipline_content))}\n                          changeTags={(newTags) => {\n                              const oldInfo = {...userInfo};\n                              oldInfo.disciplines = newTags;\n                              setUserInfo(oldInfo);\n                          }\n                          }/>\n                    {(userValid.about.noFocus && userValid.about.msg) &&\n                    <AuthError msg={userValid.about.msg}/>}\n                    <div className=\"prof-info mt-2\">\n                        <div className=\"users-control_label\">Общая информация</div>\n                        <input id=\"input-about\" className=\"users-control_input\"\n                               onChange={handleUserInfo} onBlur={handleBlur}/>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    return (\n        <div>\n            <StatusLabel info={label}/>\n            <div className=\"users\">\n                <div className=\"users-control\">\n                    <div className=\"panel__header\">\n                        Добавление пользователей\n                    </div>\n                    <div className=\"users-control_block\">\n                        <div className=\"mt-1\">\n                            {(userValid.surname.noFocus && userValid.surname.msg) &&\n                            <AuthError msg={userValid.surname.msg}/>}\n                            <div className=\"users-control_label\">Фамилия</div>\n                            <input id=\"input-surname\" className=\"users-control_input\" value={userInfo.surname}\n                                   onChange={handleUserInfo} onBlur={handleBlur}/>\n                        </div>\n                        <div className=\"mt-1\">\n                            {(userValid.name.noFocus && userValid.name.msg) &&\n                            <AuthError msg={userValid.name.msg}/>}\n                            <div className=\"users-control_label\">Имя</div>\n                            <input id=\"input-name\" className=\"users-control_input\" value={userInfo.name}\n                                   onChange={handleUserInfo} onBlur={handleBlur}/>\n                        </div>\n                        <div className=\"mt-1\">\n                            {(userValid.patronymic.noFocus && userValid.patronymic.msg) &&\n                            <AuthError msg={userValid.patronymic.msg}/>}\n                            <div className=\"users-control_label\">Отчество</div>\n                            <input id=\"input-patronymic\" className=\"users-control_input\" value={userInfo.patronymic}\n                                   onChange={handleUserInfo} onBlur={handleBlur}/>\n                        </div>\n                        <div className=\"mt-1\">\n                            {(userValid.phone.noFocus && userValid.phone.msg) &&\n                            <AuthError msg={userValid.phone.msg}/>}\n                            <div className=\"users-control_label\">Телефон</div>\n                            <small className=\"users-control_advice\">Формат: 8 (888) 888-88-88</small>\n                            <input id=\"input-phone\" className=\"users-control_input\" value={userInfo.phone}\n                                   onChange={handleUserInfo} onBlur={handleBlur}/>\n                        </div>\n                        <div className=\"mt-1\">\n                            {(userValid.email.noFocus && userValid.email.msg) &&\n                            <AuthError msg={userValid.email.msg}/>}\n                            <div className=\"users-control_label\">Email</div>\n                            <input id=\"input-email\" className=\"users-control_input\" value={userInfo.email}\n                                   onChange={handleUserInfo} onBlur={handleBlur}/>\n                        </div>\n                        <div className=\"mt-1\">\n                            <div className=\"users-control_label\">Пароль</div>\n                            <small className=\"users-control_advice\">Не заполняется, если нет необходимости обновлять\n                                пароль существующего пользователя.</small>\n                            <div className=\"d-flex flex-row align-items-center\">\n                                <input id=\"input-password\" className=\"users-control_input\"\n                                       value={userInfo.password} onChange={handleUserInfo}\n                                       disabled={false} onBlur={handleBlur}/>\n                                <button type=\"button\" onClick={handlePassword}\n                                        className=\"tag-btn ml-1\"><FontAwesomeIcon className=\"icon-reload\"\n                                                                                  icon={faRedoAlt}\n                                                                                  size={\"sm\"}\n                                                                                  color={\"#ffffff\"}/></button>\n                            </div>\n                        </div>\n\n                        <div className=\"mt-3 mb-2\">\n                            <div className=\"users-control_label\">Тип пользователя</div>\n                            <select id=\"select-usertype\" className=\"users-control_select\" value={userInfo.role}\n                                    onChange={handleUserInfo} onBlur={handleBlur}>\n                                <option value={USER_TYPE_STUDENT}>Студент</option>\n                                <option value={USER_TYPE_PROFESSOR}>Преподаватель</option>\n                                <option value={USER_TYPE_METHODIST}>Методист</option>\n                            </select>\n                        </div>\n                        {defineRole()}\n\n                        <button type=\"button\" className=\"btn users-control_load mt-3 mb-3\"\n                                onClick={handleSubmit}>{btnText}\n                        </button>\n                    </div>\n                </div>\n                <UsersTable id={1} url={Urls.user.getProfessorsAll()} userType={USER_TYPE_PROFESSOR}\n                            title={\"Список преподавателей\"} rowClickEvent={handleUserEdit}/>\n                <UsersTable id={2} url={Urls.user.getStudentsAll()} userType={USER_TYPE_STUDENT}\n                            title={\"Список студентов\"} rowClickEvent={handleUserEdit}/>\n            </div>\n        </div>\n    )\n}\n\nexport default UsersControl;","import \"./pulseCheckBox.scss\"\nimport React from \"react\";\n\ntype Props = {\n    description: string\n    isChecked: (arg0: boolean) => void;\n}\n\nconst PulseCheckBox: React.FC<Props> = ({description, isChecked}) => {\n    const [checked, changeChecked] = React.useState(false);\n\n    const handleClick = React.useCallback(() => {\n        changeChecked(!checked);\n        isChecked(checked);\n    }, [checked, isChecked])\n\n    return (\n        <div className=\"d-flex flex-nowrap flex-row align-items-bottom\">\n            <input type=\"checkbox\" className=\"option-input checkbox\" onChange={handleClick}/>\n            <p className=\"pulse-description\">{description}</p>\n        </div>\n    )\n}\n\nexport default PulseCheckBox;","import React, {FormEvent, useState} from \"react\";\nimport {MDBBtn, MDBInput} from \"mdbreact\";\nimport {Editor} from \"@tinymce/tinymce-react\";\nimport PulseCheckBox from \"@components/PulseCheckBox\";\nimport {TAG_EDUCATIONAL, TAG_GENERAL, TAG_IMPORTANT} from \"@config/config\";\nimport {useHistory} from \"react-router-dom\";\nimport {getTinymce} from \"@tinymce/tinymce-react/lib/es2015/main/ts/TinyMCE\";\nimport Admin from \"@media/admin.jpg\"\n\nimport \"./createPost.scss\";\nimport {DOMAIN, Urls} from \"@config/urls\";\nimport {makeGet, makePost} from \"@utils/network\";\nimport StatusLabel from \"@components/StatusLabel\";\n\ntype PostInfo = {\n    title: string,\n    postImgUrl: string,\n    tag: string,\n    allowComments: boolean,\n    content: string,\n    buttonText: string\n}\n\nconst CreatePost = () => {\n    const [postInfo, changePostInfo] = React.useState<PostInfo>({\n        title: \"\",\n        postImgUrl: Admin,\n        tag: \"\",\n        allowComments: false,\n        content: \"\",\n        buttonText: \"Предпросмотр\"\n    })\n    const [label, showLabel] = useState({content: \"\", success: false});\n    const [tagContent, changeTagContent] = React.useState(\"\")\n    const [tag, changeTag] = React.useState<HTMLElement | null>();\n    const [tagVal, changeTagVal] = React.useState<string>(\"\");\n    const [postImgInput, changePostImgInput] = React.useState<HTMLInputElement | null>();\n    const [isTextChanged, changeTextFlag] = React.useState(false);\n    const [postId, setPostId] = React.useState(0);\n    const history = useHistory();\n\n    React.useEffect(() => {\n        changeTag(document.getElementById(\"post-tag\"));\n        changePostImgInput(document.getElementById(\"post-img\") as HTMLInputElement);\n        makeGet(Urls.post.getCurrent()).then((resp) => {\n            if (resp.status === 200) {\n                if (resp.data && resp.data > 0) {\n                    setPostId(resp.data)\n                } else {\n                    showLabel({content: \"Ошибка сервера. Попробуйте позже.\", success: false})\n                }\n            }\n        }).catch((err) => {\n            showLabel({content: \"Не удалось соединиться с сервером. Попробуйте обновить страницу.\", success: false})\n        });\n\n    }, []);\n\n    const handleTitleChange = React.useCallback((e: FormEvent<HTMLInputElement>) => {\n        const oldInfo = postInfo;\n        oldInfo.title = (e.target as HTMLInputElement).value;\n        changePostInfo(oldInfo);\n    }, [postInfo]);\n\n    const handleEditorChange = React.useCallback((content: string, editor: any) => {\n        const oldInfo = {...postInfo};\n        oldInfo.content = content;\n        oldInfo.buttonText = \"Предпросмотр\";\n        changeTextFlag(false);\n        changePostInfo(oldInfo);\n    }, [postInfo]);\n\n    const handleButtonChange = React.useCallback(() => {\n        if (!isTextChanged) {\n            getTinymce()?.activeEditor.execCommand(\"mcePreview\");\n            //tinymce.get(\"post-create-editor\").execCommand(\"mcePreview\");\n        } else {\n            makePost(Urls.post.post(), {\n                title: postInfo.title,\n                author_id: 1,\n                tag_type: tagVal,\n                content: postInfo.content,\n            }).then((resp) => {\n                console.log(resp.data, resp.status)\n            }).catch((e) => {\n\n            })\n            history.push(Urls.feed.slugRoot);\n        }\n        changeTextFlag(true);\n        const oldInfo = {...postInfo};\n        oldInfo.buttonText = \"Опубликовать\";\n        changePostInfo(oldInfo);\n        //TEMP.posts.push(Parser(postInfo.content) as JSX.Element);\n        //console.log(TEMP);\n        //this.setState({buttonText: \"Опубликовать\"});\n    }, [isTextChanged, postInfo]);\n\n    const handleSelectChange = React.useCallback((e: React.ChangeEvent<HTMLSelectElement>) => {\n        if (!tag) {\n            return;\n        }\n        switch (e.target.value) {\n            case \"1\":\n                tag.style.color = \"#34a8bb\";\n                changeTagVal(\"general\");\n                break;\n            case \"2\":\n                tag.style.color = \"#e86262\";\n                changeTagVal(\"important\");\n                break;\n            case \"3\":\n                tag.style.color = \"#59b759\";\n                changeTagVal(\"education\");\n        }\n    }, [tag]);\n\n    const handleImgChange = () => {\n        const oldPost = {...postInfo};\n        if (postImgInput && postImgInput.files && postImgInput.files[0]) {\n            oldPost.postImgUrl = URL.createObjectURL(postImgInput.files[0]);\n            changePostInfo(oldPost);\n            console.log(postInfo)\n        }\n    };\n\n    const handleCheckBoxChange = React.useCallback((isChecked: boolean) => {\n        const oldInfo = {...postInfo};\n        oldInfo.allowComments = isChecked;\n        changePostInfo(oldInfo);\n    }, [postInfo])\n\n    const filePickerCb = React.useCallback((callback: Function, value: any, meta: Record<string, any>) => {\n        if (meta.filetype === 'image') {\n            let input = document.createElement(\"input\");\n            let file: File;\n            input.setAttribute(\"type\", \"file\");\n            input.setAttribute(\"accept\", \"image/*\");\n            input.onchange = () => {\n                if (input.files) {\n                    file = input.files[0];\n                }\n                const reader = new FileReader();\n                reader.onload = (e) => {\n                    callback(e.target?.result, {\n                        alt: file.name\n                    });\n                }\n\n                reader.readAsDataURL(file);\n            };\n            input.click();\n        }\n    }, []);\n\n    return (\n        <div>\n            <StatusLabel info={label}/>\n            <div\n                className=\"post-card container-fluid d-flex h-100 justify-content-center align-items-center col-xl-10\">\n                <form className=\"post-create-card container\">\n                    <p className=\"h5 text-center mb-4\">Создние поста</p>\n                    <div className=\"d-flex flex-row\">\n                        <div className=\"col-2 d-flex flex-column flex-nowrap align-items-center\">\n                            <img id=\"blah\" src={postInfo.postImgUrl} alt=\"img not loaded\" className=\"post-img\"/>\n                            <input className=\"post-img\" type=\"file\" id=\"post-img\" accept=\"image/*\"\n                                   onChange={handleImgChange}/>\n                            <button className=\"btn-upload-img\" type=\"button\" onClick={() => {\n                                postImgInput?.click()\n                            }}>\n                                <span className=\"btn-title\">...</span>\n                            </button>\n                        </div>\n                        <div className=\"col-10\">\n                            <div className=\"grey-text\">\n                                <MDBInput label=\"Заголовок\" icon=\"heading\" group type=\"text\"\n                                          onChange={handleTitleChange}/>\n                                <div className=\"d-flex flex-row\">\n                                    <i id=\"post-tag\" className=\"fa fa-tag fa-lg position-absolute\"/>\n                                    <select className=\"post-tag\" defaultValue=\"0\" onChange={handleSelectChange}>\n                                        <option value=\"0\" hidden disabled>ТЭГ</option>\n                                        <option value=\"1\">{TAG_GENERAL}</option>\n                                        <option value=\"2\">{TAG_IMPORTANT}</option>\n                                        <option value=\"3\">{TAG_EDUCATIONAL}</option>\n                                    </select>\n                                </div>\n                                <div className=\"d-flex flex-row\">\n                                    <i className=\"fa fa-pencil-alt fa-lg position-absolute\"/>\n                                    <div className=\"editor-with-tag\">\n                                        <Editor\n                                            id=\"post-create-editor\"\n                                            apiKey=\"i2ukwtg8ixnvv92anoj0cspm5r696rucv5oxdaten85488x4\"\n                                            init={{\n                                                language: \"ru\",\n                                                min_height: 350,\n                                                height: 500,\n                                                max_height: 750,\n                                                plugins: [\n                                                    \"advlist autolink lists link image charmap print preview anchor\",\n                                                    \"searchreplace visualblocks code fullscreen \",\n                                                    \"insertdatetime media table paste code help wordcount emoticons hr imagetools\", //TODO: check imagetools proxy\n                                                ],\n                                                toolbar:\n                                                    \"undo redo | image hr| formatselect | bold italic forecolor backcolor | \\\n                                                    alignleft aligncenter alignright alignjustify | \\\n                                                    numlist bullist outdent indent | removeformat\",\n                                                style_formats_merge: true,\n                                                style_formats: [\n                                                    {\n                                                        title: 'Image Top', selector: 'img', styles: {\n                                                            'vertical-align': 'top'\n                                                        }\n                                                    },\n                                                    {\n                                                        title: 'Image Middle', selector: 'img', styles: {\n                                                            'vertical-align': 'middle'\n                                                        }\n                                                    },\n                                                    {\n                                                        title: 'Image Bottom', selector: 'img', styles: {\n                                                            'vertical-align': 'bottom'\n                                                        }\n                                                    },\n                                                ],\n                                                insertdatetime_formats: ['%H:%M:%S', '%d-%m-%Y', '%I:%M:%S %p'],\n                                                image_advtab: true,\n                                                fullscreen_native: true,\n                                                automatic_uploads: true,\n                                                image_description: false,\n                                                file_picker_types: \"image\",\n                                                paste_webkit_styles: 'color font-size',\n                                                paste_retain_style_properties: 'color font-size',\n                                                paste_data_images: false,\n                                                paste_as_text: false,\n                                                images_upload_url: Urls.post.getUploadUrl(postId),\n                                                //images_upload_base_path: '/some/basepath',\n                                                file_picker_callback: filePickerCb,\n                                                content_style: \"body { font-family:Helvetica,Arial,sans-serif; font-size:14px }\"\n                                            }}\n                                            value={postInfo.content}\n                                            onEditorChange={handleEditorChange}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"mt-3\">\n                                    <PulseCheckBox description=\"Разрешить комментарии\"\n                                                   isChecked={handleCheckBoxChange}/>\n                                </div>\n                            </div>\n                            <div className=\"text-center\">\n                                <MDBBtn outline color=\"cyan\" onClick={handleButtonChange}>\n                                    <span>{postInfo.buttonText}</span>\n                                </MDBBtn>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default CreatePost;","import React from \"react\";\nimport Admin from \"@media/admin.jpg\"\n\n\n\nconst Profile = () => {\n\n    const [imgUrl, changeImgUrl] = React.useState(Admin);\n    const [postImgInput, changePostImgInput] = React.useState<HTMLInputElement | null>();\n\n    const handleImgChange = () => {\n        if (postImgInput && postImgInput.files && postImgInput.files[0]) {\n            changeImgUrl(URL.createObjectURL(postImgInput.files[0]));\n        }\n    };\n\n    React.useEffect(() => {\n        changePostImgInput(document.getElementById(\"post-img\") as HTMLInputElement);\n    }, []);\n\n    return (\n        <div className=\"col-2 d-flex flex-column flex-nowrap align-items-center\">\n            <img id=\"blah\" src={imgUrl} alt=\"img not loaded\" className=\"post-img\"/>\n            <input className=\"post-img\" type=\"file\" id=\"post-img\" accept=\"image/*\"\n                   onChange={handleImgChange}/>\n            <button className=\"btn-upload-img\" type=\"button\" onClick={() => {\n                postImgInput?.click()\n            }}>\n                <span className=\"btn-title\">...</span>\n            </button>\n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nimport {PrivateRoute} from \"@utils/privateRoute\"\nimport Header from \"@components/Header\";\nimport {Urls} from \"@config/urls\"\nimport Timetable from \"../pages/Timetable\";\nimport Auth from \"../pages/Authorization\";\nimport NotFoundPage from \"../pages/NotFound\";\nimport Home from \"../pages/Home\";\nimport UsersControl from \"../pages/UsersControl\";\nimport \"../styles/main.scss\"\nimport \"../styles/fontawesome-free-5.15.3-web/css/all.min.css\"\nimport CreatePost from \"../pages/PostCreate\";\nimport ViewPost from \"@components/ViewPost\";\nimport Profile from \"../pages/Profile\";\n\nexport const TEMP: { posts: Array<JSX.Element> } = {\n    posts: [],\n}\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <div className=\"App h-100\">\n                <Header/>\n                <Switch>\n                    <PrivateRoute exact path={Urls.root}\n                                  component={Home}/>\n                    <PrivateRoute exact path={Urls.feed.slugRoot}\n                                  component={Home}/>\n                    <PrivateRoute exact path={Urls.timetable.slugEdit}\n                                  component={Timetable}/>\n                    <PrivateRoute exact path={Urls.panel.slugRoot}\n                                  component={UsersControl}/>\n                    <PrivateRoute exact path={Urls.post.slugCreate}\n                                  component={CreatePost}/>\n                    <PrivateRoute path=\"/posts/:id\" component={ViewPost} />\n                    <PrivateRoute exact path={Urls.user.slugMe} component={Profile} />\n                    <PrivateRoute path={Urls.user.slugProfile} component={()=>(<div>Profile</div>)} />\n                    <Route exact path={Urls.auth} component={Auth}/>\n                    <Route path={Urls.notFound} component={NotFoundPage}/>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    )\n}\n\n\n// const App = () => {\n//     return (\n//         <BrowserRouter>\n//             <div className=\"App h-100\">\n//                 <CreatePost/>\n//             </div>\n//         </BrowserRouter>\n//     )\n// }\n\nexport default App;\n\n//https://github.com/ktsstudio/kts-school-frontend","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./styles/main.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}